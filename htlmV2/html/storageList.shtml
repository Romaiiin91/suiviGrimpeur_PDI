<!--#set var="helpURL" val="javascript:launch('/help/storagelist_h.shtml')" -->
<!--#set var="WizardFormAction" val="noAction" -->
<!--#include virtual="/incl/top_incl.shtml" -->

<!--#include virtual="/sm/sm.srv?action=get&group=Properties.LocalStorage.LocalStorage,Storage" -->

  <!--#set var="activeMenu" val="system" -->

<!--#if expr="$root_Storage_S0_DiskID = NetworkShare" -->
    <!--#set var="networkShareExists" val="yes" -->
<!--#endif -->
<!--#if expr="$root_Storage_S1_DiskID = NetworkShare" -->
    <!--#set var="networkShareExists" val="yes" -->
<!--#endif -->

<!--#set var="activeMenu1" val="storage" -->
<!--#set var="activePage" val="storagelist" -->

  <style type="text/css">
    th {
      text-align:left;
    }
  </style>
  
  <script language="javascript" type="text/javascript">
  <!--
  
    //GLOBAL PARAMS
    var langObjStgList = new Language("diskManagement", "storageList");
    var ajaxRequest = AxisConnectionFactory.createAjaxConnection();
    var nsBindType = ""; //storing "", "bind" or "unbind" - depending on selected share
    var schemaVersion = "1.0"; //currently used schemaversion for networkShare cgi:s
  <!--#if expr="$networkShareExists = yes" -->
    var shareList; //when first getShares() call has been done, shares will be saved here for later use.
  <!--#endif -->
    //END GLOBAL PARAMS
  
    <!--#include virtual="/incl/functions.shtml" -->

    function sendAction(action)
    {
      return AxisConnectionFactory.getResponseXmlWith(["GET", action, false], null, ajaxRequest);
    }
    
    function init()
    {
      langObjStgList.init();
      renderStorageTable();
    }
  
    function renderStorageTable()
    {
      var storageTable = document.getElementById("storageTable");
      var now = new Date();
      var timestamp = now.getTime();

      var url = "/axis-cgi/disks/list.cgi?diskid=all&type=xml&timestamp="+timestamp;
      var disksXML = sendAction( url )
  
      if( !disksXML )
        return;
  
      var disks = disksXML.selectNodes("/root/disks/disk");
      var len = disks.length;
      var disk, id, type, status, totalsize, formattedTotalsize, freesize, usedSpace, readonly;
  
      for( var i = 0; i < len; i++ )
      {
        disk = disks[i];
        
        if(disk.getAttribute( "group" ).indexOf("S") != -1 )
        {
        
          id = disk.getAttribute( "diskid" );
          type = disk.getAttribute( "type" );
          if( !type )
          {
            if( id == "SD_DISK" )
              type = langObjStgList.getText("sdCardTxt");
            else if( id == "NetworkShare" )
              type = langObjStgList.getText("nSTxt");
            else
              type = id;
          }
          
          if( id == "NetworkShare" && !getGeneralNSLocalStorageStatus())
            status = langObjStgList.getText("notPresentNSTxt");
          else
            status = disk.getAttribute( "status" );

          totalsize = disk.getAttribute( "totalsize" );
          freesize = disk.getAttribute( "freesize" );
          readonly = disk.getAttribute( "readonly" );
          
          var mountedText = langObjStgList.getText("mountedTxt");
          var notMountedText = "";
          var notPresent = "";
          var readonlyText = ((readonly == "yes")?langObjStgList.getText("readonlyTxt"):"");
          
          if( id == "NetworkShare" )
          {
            notMountedText = langObjStgList.getText("notMountedNSTxt");
            notPresentText = langObjStgList.getText("notPresentNSTxt");
          }
          else if( id == "SD_DISK" )
          {
            notMountedText = langObjStgList.getText("notMountedSDTxt");
            notPresentText = langObjStgList.getText("notPresentSDTxt");
          }
          
          status = ( (status == "OK")?mountedText+((readonly == "yes")?", "+readonlyText:""):((status == "disconnected")?notPresentText:(status == "connected")?notMountedText:status) );
    
          if(totalsize > 0)
          {
            formattedTotalsize = getSizeText( parseInt(totalsize) );
            usedSpace =  getSizeText( parseInt(totalsize - freesize) );
          }
          else
          {
            formattedTotalsize = "-";
            usedSpace = "-";
          }
          
          var row = storageTable.insertRow(-1);
          addCellsToRow( row, id, type, status, formattedTotalsize, usedSpace );
        }
      }
  
    }
    
    function getSizeText( sizeKB )
    {
      var sizeMB;
      var sizeGB;
      var sizeTB;

      var tmpSize = sizeKB/1024*10;

      if( tmpSize >= 1  )
      {
        sizeMB = Math.round( tmpSize )/10;
        tmpSize = sizeKB/(1024*1024)*10;
        
        if( tmpSize >= 10 ) //dont want any 0.x GB
        {
          sizeGB =  Math.round( tmpSize )/10;
          tmpSize = sizeKB/(1024*1024*1024)*10;
          if( tmpSize >= 10 ) //dont want any 0.X TB
          {
            sizeTB =  Math.round( tmpSize )/10;
            return sizeTB + "&nbsp;"+langObjStgList.getText("tBTxt");
          }
          else
          {
            return sizeGB + "&nbsp;"+langObjStgList.getText("gBTxt");
          }
        }
        else
        {
          return sizeMB + "&nbsp;"+langObjStgList.getText("mBTxt");
        }
      }
      else
      {
        return sizeKB + "&nbsp;"+langObjStgList.getText("kBTxt");
      }
    }
    
    function reloadPage()
    {
      document.location.href ="/admin/storageList.shtml?<!--#if expr="$basic = yes" -->basic=yes&<!--#endif -->id=<!--#echo var="ssi_request_id" option="encoding:url" -->";
    }
    
    function getGeneralNSLocalStorageStatus()
    {
      var shares = getShares();
    
      if(shares)
      {
        for(var i=0; i < shares.length; i++)
        {
          if(shares[i].getAttribute("DiskId") != null)
            return shares[i].getAttribute("ShareId");
        }
      }
      return false;
    }
    
    function diskManagement(diskId)
    {
      var width = 605;
      var height = 310;
      if(diskId == "NetworkShare")
        height = 370;
      else if(diskId == "SD_DISK")
        height = 330;
        
      openPopUp("/admin/diskInfo.shtml?diskid="+diskId+"&id=<!--#echo var="ssi_request_id" option="encoding:url" -->", "diskMan_"+diskId, width, height);
    }
  
    function addCellsToRow( row, id, type, status, totalsize, usedSpace )
    {
      var cell = row.insertCell(-1);
      
      var params = "\'"+id+"\'";
      
      cell.innerHTML = "<a href=\"javascript:diskManagement("+params+")\">"+type+"<\/a>";
  
      cell = row.insertCell(-1);
      cell.innerHTML = status;
      
      cell = row.insertCell(-1);
      cell.innerHTML = totalsize;
  
      cell = row.insertCell(-1);
      cell.innerHTML = usedSpace;
  
    }
    
    function getShares()
    {
      if(shareList)
        return shareList;
      
      var xmlNodes;
      var now = new Date();
      var timestamp = now.getTime();
      var url = "/axis-cgi/disks/networkshare/list.cgi?schemaversion="+schemaVersion+"&shareid=all&timestamp="+timestamp;

      listXml = sendAction(url);
      
      if( listXml )
      {
        xmlNodes = listXml.selectNodes("//NetworkShare");
      }
      
      shareList = xmlNodes;
      return xmlNodes;
    }
  // -->
  </script>
</head>
<body <!--#include virtual="/incl/bodytag.shtml" --> onload="javascript:init();">
  
  <!--#include virtual="/incl/top_incl2.shtml" -->
  <table border="0" cellpadding="3" cellspacing="0" width="100%" valign="top">
    <tr>
      <td class="topTitle" align="left" colspan="2"><span id="title"></span></td>
      <td class="topTitle">
        <div align="right">
          <a href="<!--#echo var="helpURL" option="encoding:url" -->"><img height="27" width="27" src="/pics/help.gif" border="0" alt="" id="hlpPic"></a>
        </div>
      </td>
    </tr>
    <tr>
      <td class="subTitle" align="left" colspan="3"><span id="subTitle"></span></td></tr>
    <tr>
      <td colspan="3">
        <table border="0" cellpadding="3" cellspacing="0" border="0" width="100%" class="alternateRows" id="storageTable">
          <tr>
            <th><span id="typeTxt"></span></th>
            <th><span id="statusTxt"></span></th>
            <th><span id="usedTxt"></span></th>
            <th><span id="nameTxt"></span></th>
         </tr>
        </table>
      </td>
    </tr>
  </table>

<!--#include virtual="/incl/bottom_incl.shtml" -->
