  <script  language="javascript" type="text/javascript">
    <!--
    var langObjSchRecurSet;
    
    var eventNameSpaces = new SOAPClientNS();
    eventNameSpaces.add("aev", "http://www.axis.com/vapix/ws/event1" );
    eventNameSpaces.add("tns1", "http://www.onvif.org/ver10/topics" );
    eventNameSpaces.add("tnsaxis", "http://www.axis.com/2009/event/topics" );
    eventNameSpaces.add("wsnt", "http://docs.oasis-open.org/wsn/b-2" );
  
    var wsdlUrl = "/wsdl/vapix/EventService.wsdl";

    function onInit()
    {
      langObjSchRecurSet = new Language("incl_schedules", "recurrence_setup");
      langObjSchRecurSet.init(false, true);
      getScheduleNameList();
      <!--#if expr="$doAction = modify" -->
        setFields();
      <!--#endif -->
    }
    addLoadEvent( onInit );
    
    var scheduleNames = new Array();
    function getScheduleNameList()
    {
      scheduleNames = new Array();

      var params = new SOAPClientParameters();
    
      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();
  
      var params = new SOAPClientParameters();
      var scheduleFilter = { "ScheduleType":"Pulse" };
      params.add("ScheduleFilter", scheduleFilter );
      
      var url = "/vapix/services"+timestamp;
      var method = "aev:GetScheduledEvents";
    
      SOAPClient.invoke( wsdlUrl, url, eventNameSpaces, method, params, false, loadScheduleNameList );
    }
  
    function loadScheduleNameList( responseObj )
    {
      if( responseObj )
      {
        var scheduledParent = responseObj.ScheduledEvents;
        if( scheduledParent )
        {
          var scheduleArr = scheduledParent.ScheduledEvent;
          if( scheduleArr )
          {
            if( scheduleArr.constructor != Array )
            {
              scheduleArr = new Array(scheduleArr);
            }
            var len = scheduleArr.length;

            for( var i = 0; i < len; i++ )
            {
              if( scheduleArr[i].Name )
              {
                <!--#if expr="$doAction = modify" -->
                  if( scheduleArr[i].EventID != "<!--#echo var="eventId" option="encoding:javascript" -->" )
                  {
                    scheduleNames[ scheduleArr[i].Name ] = scheduleArr[i].Name;
                  }
                  else
                  {
                    modifiedRecurrence = scheduleArr[i];
                  }
                <!--#else -->
                  scheduleNames[ scheduleArr[i].Name ] = scheduleArr[i].Name;
                <!--#endif -->
              }
            }
          }
        }
      }//if response
    }

    <!--#if expr="$doAction = modify" -->
      var modifiedRecurrence;
      function setFields()
      {
        document.getElementById("name").value = modifiedRecurrence.Name;
        var schedule = modifiedRecurrence.Schedule.ICalendar;
        schedule = schedule.replace(/\\n/g, "\n");

        var tmpArr = schedule.split("\n");
        var len = tmpArr.length;
        var rrule, dtstart, tmpStr;
        for( var i = 0; i < len; i++ )
        {
          tmpStr = tmpArr[i];
          if( tmpStr.indexOf("DTSTART:") != -1 )
          {
            dtstart = tmpStr.replace("DTSTART:", "");
          }
          else if( tmpStr.indexOf("RRULE:FREQ=") != -1 )
          {
            rrule = tmpStr.replace("RRULE:FREQ=", "");
          }
        }
        var tmpArr = rrule.split(';');
        
        var unit = tmpArr[0];
        var interval = tmpArr[1].replace("INTERVAL=", "");

        document.getElementById("repeat").value = interval;
        var selectEl = document.getElementById("repeatUnit");
        setSelectedOption( selectEl, unit );

      }
    <!--#endif -->

    function validateRecurrence()
    {
      var nameEl = document.getElementById("name");
      var name = ( nameEl.value ).trim();
      if( name == "" )
      {
        showErrorMsg( langObjSchRecurSet.getText("nameAlert"), nameEl );
        return false;
      }
      else if( scheduleNames[ name ] )
      {
        if( !confirm( langObjSchRecurSet.getText("nameConfirm1")+" \""+name+"\".\n\n"+langObjSchRecurSet.getText("nameConfirm2") ) )
        {
          nameEl.focus();
          nameEl.select();
          return false;
        }
      }

      var unit = document.getElementById("repeatUnit").value;
      var intervalEl = document.getElementById("repeat");
      var interval = intervalEl.value;
      if( !IntegerCheck( interval, 0, "noUpperLimit") )
      {
        showErrorMsg( langObjSchRecurSet.getText("valNZAlert"), intervalEl );
        return false;
      }
      else if( unit == "DAILY" && interval > 365 )
      {
        showErrorMsg( langObjSchRecurSet.getText("maxDaysAlert"), intervalEl );
        return false;
      }

      return true;
    }

    function saveData()
    {
      document.getElementById( "btnOK" ).disabled = true;
      if( !validateRecurrence() )
      {
        document.getElementById( "btnOK" ).disabled = false;
        return;
      }
    <!--#if expr="$doAction = modify" -->
      var params = new SOAPClientParameters();
      params.add("EventID", modifiedRecurrence.EventID );

      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();
      
      var url = "/vapix/services"+timestamp;
      var method = "aev:RemoveScheduledEvent";
      SOAPClient.invoke( wsdlUrl, url, eventNameSpaces, method, params, true, onRemoveSchedule );
    <!--#else -->
      saveRecurrence();
    <!--#endif -->
    }

    <!--#if expr="$doAction = modify" -->
      function onRemoveSchedule( responseObj )
      {
        if( responseObj )
        {
          if( responseObj.name == "Error" )
          {
            var errorMsg = ( ( responseObj.description )?responseObj.description:(responseObj.fileName)?responseObj.fileName:responseObj.message );
            alert( errorMsg );
            return;
          }
        }//if response
    
        saveRecurrence();
      }
    <!--#endif -->

    function saveRecurrence()
    {
      var obj = new Object();
      <!--#if expr="$doAction = modify" -->
        obj.EventID = modifiedRecurrence.EventID;
      <!--#endif -->
      obj.Name = document.getElementById("name").value;

      var scheduleArr = new Array();
      scheduleArr[0] = "DTSTART:19700101T000000";

      var unit = document.getElementById("repeatUnit").value;
      var interval = document.getElementById("repeat").value;
      scheduleArr[1] = "RRULE:FREQ="+unit+";INTERVAL="+interval;

      obj.Schedule = { "ICalendar":scheduleArr.join("\n") };

      var soapParamObj = new SOAPClientParameters();
      soapParamObj.add("NewScheduledEvent", obj);

      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();
  
      var url = "/vapix/services"+timestamp;
      var method = "aev:AddScheduledEvent";
      SOAPClient.invoke( wsdlUrl, url, eventNameSpaces, method, soapParamObj, true, onSaveSchedule );
    }

    function showErrorMsg( msg, focusOn )
    {
      alert( msg );
      if( focusOn )
      {
        focusOn.focus();
        focusOn.select();
      }
    }

    function onSaveSchedule( responseObj )
    {
      if( responseObj )
      {
        if( responseObj.name == "Error" )
        {
          var errorMsg = ( ( responseObj.description )?responseObj.description:(responseObj.fileName)?responseObj.fileName:responseObj.message );
          alert( errorMsg );
          
          document.getElementById( "btnOK" ).disabled = false;
          return;
        }
      }//if response

      finishSave();
    }

    function finishSave()
    {
      document.getElementById( "btnOK" ).disabled = false;
      try
      {
        window.opener.reloadSchedulesList();
      }
      catch( e )
      {
      }
      window.close();
    }
    // -->
  </script>
