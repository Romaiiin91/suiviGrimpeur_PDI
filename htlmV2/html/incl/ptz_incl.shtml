
  <!--#if expr="$root_PTZ_BoaProtPTZOperator = " -->
    <!--#include virtual="/sm/sm.srv?action=get&group=PTZ.BoaProtPTZOperator" -->
  <!--#endif -->
  <!--#if expr="$root_System_BoaProtViewer = " -->
    <!--#include virtual="/sm/sm.srv?action=get&group=System.BoaProtViewer" -->
  <!--#endif -->
  <!--#if expr="$root_Properties_PTZ_DriverManagement$ = " -->
    <!--#include virtual="/sm/sm.srv?action=get&group=Properties.PTZ" -->
  <!--#endif -->
  <!--#include virtual="/sm/sm.srv?action=get&group=PTZ.Support.S$camnbr$,PTZ.UserAdv" -->
<!--#set var="showPan" val="no" -->
<!--#if expr="$MovePan != no" --><!--#if expr="$(root_PTZ_Various_V$camnbr$_PanEnabled) = true" -->
  <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsolutePan) = true" -->
    <!--#set var="showPan" val="yes" -->
  <!--#elif expr="$(root_PTZ_Support_S$camnbr$_RelativePan) = true" -->
    <!--#set var="showPan" val="yes" -->
  <!--#endif -->
<!--#endif --><!--#endif -->
<!--#set var="showTilt" val="no" -->
<!--#if expr="$MoveTilt != no" --><!--#if expr="$(root_PTZ_Various_V$camnbr$_TiltEnabled) = true" -->
  <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteTilt) = true" -->
    <!--#set var="showTilt" val="yes" -->
  <!--#elif expr="$(root_PTZ_Support_S$camnbr$_RelativeTilt) = true" -->
    <!--#set var="showTilt" val="yes" -->
  <!--#endif -->
<!--#endif --><!--#endif -->
<!--#set var="showZoom" val="no" -->
<!--#if expr="$(root_PTZ_Various_V$camnbr$_ZoomEnabled) = true" -->
  <!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MinZoom) != _" --><!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxZoom) != _" -->
    <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteZoom) = true" -->
      <!--#set var="showZoom" val="yes" -->
    <!--#elif expr="$(root_PTZ_Support_S$camnbr$_RelativeZoom) = true" -->
      <!--#set var="showZoom" val="yes" -->
    <!--#endif -->
  <!--#endif --><!--#endif -->
<!--#endif -->
<!--#set var="showFocus" val="no" -->
<!--#if expr="$hideFocusComletely != yes" --><!--#if expr="$(root_PTZ_Various_V$camnbr$_FocusEnabled) = true" -->
  <!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MinFocus) != _" --><!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxFocus) != _" -->
    <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteFocus) = true" -->
      <!--#set var="showFocus" val="yes" -->
    <!--#elif expr="$(root_PTZ_Support_S$camnbr$_RelativeFocus) = true" -->
      <!--#set var="showFocus" val="yes" -->
    <!--#endif -->
  <!--#endif --><!--#endif -->
<!--#endif --><!--#endif -->
<!--#set var="showIris" val="no" -->
<!--#if expr="$hideIrisComletely != yes" --><!--#if expr="$(root_PTZ_Various_V$camnbr$_IrisEnabled) = true" -->
  <!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MinIris) != _" --><!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxIris) != _" -->
    <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteIris) = true" -->
      <!--#set var="showIris" val="yes" -->
    <!--#elif expr="$(root_PTZ_Support_S$camnbr$_RelativeIris) = true" -->
      <!--#set var="showIris" val="yes" -->
    <!--#endif -->
  <!--#endif --><!--#endif -->
<!--#endif --><!--#endif -->



<style type="text/css">
.dragbox { position: absolute; border: red 2px ridge; background-color:transparent; z-index: 500; }
</style>

<script type="text/javascript" src="/incl/slider.js"></script>
<script type="text/javascript" src="/incl/tooltip.js"></script>

<script language="JavaScript">
<!--
try
{
  var langObjPTZIncl = new Language("incl_platoon_ptz", "ptz_incl");
  langObjPTZIncl.init(false, true);
}
catch(e)
{
  delete e;
  <!--#include virtual="/incl/ptz_inclText_backwardsCompatibility.shtml" -->
  var langObjPTZIncl = new Language_backwardcomp();
}

var undefinedVar;  //Workaround for IE5
var img = undefinedVar;  // The video stream image object
var cross = undefinedVar;  // The crosshair image object
var siPos;
var thedragbox;
var thedragarea;
if (browser != "IE")
  var boxdef = new Box(0,0,10,10);
var radius;
var mode = "center";
<!--#if expr="_$relative != _" -->
  <!--#if expr="$relative = yes" -->
    mode = "joystick";
  <!--#endif -->
<!--#else -->
  <!--#if expr="$(root_PTZ_Support_S$camnbr$_RelativePan) = false" -->
    mode = "joystick";
  <!--#elif expr="$(root_PTZ_Support_S$camnbr$_ContinuousPan) = true" -->
    <!--#if expr="$root_Layout_DefaultJoystickMode = yes" -->mode = "joystick";<!--#endif -->
  <!--#endif -->
<!--#endif -->

var imagerotation = "";
  <!--#if expr="_$imagerotation != _" -->
    imagerotation = "<!--#echo var="imagerotation" option="encoding:javascript" -->"; //imagerotation
  <!--#elif expr="_$rotation != _" -->
    imagerotation = "<!--#echo var="rotation" option="encoding:javascript" -->"; //rotation
  <!--#elif expr="_$(root_Image_I$nbr$_Appearance_Rotation) != _" -->
    imagerotation = "<!--#echo var="root_Image_I$nbr$_Appearance_Rotation" option="encoding:javascript" -->"; //root_Image_I#_Appearance_Rotation
  <!--#endif -->
  var update_sliders = true;
  <!--#include virtual="/local/ptz_info.shtml" -->
  var position_interval = ((typeof(ptzDefQueryInterval) != "number" || isNaN(ptzDefQueryInterval)) ? 1000 : ptzDefQueryInterval);

function noAction(event)
{
  return true;
}

function init()
{
<!--#if expr="$root_Layout_ViewerOther = spush" -->
  <!--#set var="showThis" val="yes" -->
<!--#elif expr="$root_Layout_ViewerOther = quicktime" -->
  <!--#set var="showThis" val="yes" -->
<!--#endif -->
<!--#if expr="$showThis = yes" -->
  if ((browser != "IE") && (("<!--#echo var="imagePath" option="encoding:javascript" -->".indexOf("/mjpg/") != -1) || (document.URL.indexOf("/view/view.shtml") == -1))) {
    img = document.getElementById("stream");
  <!--#if expr="$showPTZCrosshair != no" -->
    cross = document.getElementById("crosshair");
    switchMode();
    // Center crosshair
    var si = document.getElementById("stream");
    var ch = document.getElementById("crosshair");
    siPos = getPos(si);
    ch.style.left = (si.width - ch.width)/2 + siPos.x;
    ch.style.top = (si.height - ch.height)/2 + siPos.y;
  <!--#endif -->
    thedragbox = document.getElementById("zoombox");
    
    if(thedragbox != null)
      thedragbox.style.visibility = 'hidden';
  <!--#if expr="$(root_PTZ_Support_S$camnbr$_AreaZoom) = true" -->
    if (mode == "center") {
      thedragarea = document.getElementById("stream");
      thedragarea.onmousedown = placeHandler;
      thedragarea.onmouseup = noAction;
      thedragarea.onmousemove = noAction;
      <!--#if expr="$showPTZCrosshair != no" -->
        cross.onmousedown = placeHandler;
      <!--#endif -->
    }
  <!--#endif -->
  }
<!--#endif -->
  <!--#if expr="$showPTZBars = yes" -->
    <!--#if expr="$root_PTZ_BoaProtPTZOperator$_$root_System_BoaProtViewer$ != password_anonymous" -->
      getPtzPositions();
    <!--#endif -->
  <!--#endif -->
}

function switchMode()
{
  var ptzmode;
  if (!img)
    return;
  img.onmousedown = undefinedVar;
  img.onmouseup   = undefinedVar;
  img.onmousemove = undefinedVar;
  img.style.cursor = "crosshair";
  <!--#if expr="$showPTZCrosshair != no" -->
    cross.onmousedown = undefinedVar;
    cross.onmouseup   = undefinedVar;
    cross.onmousemove = undefinedVar;
    cross.style.cursor = "crosshair";
    <!--#if expr="$root_Layout_ShowRelCrossEnabled = yes" -->
      if (mode == "joystick") {
        cross.style.visibility = '';
      }
      else {
        cross.style.visibility = 'hidden';
      }
    <!--#else -->
      cross.style.visibility = 'hidden';
    <!--#endif -->
  <!--#endif -->

  if (mode == "center") {
    ptzmode = "center";
  <!--#if expr="$(root_PTZ_Support_S$camnbr$_AreaZoom) != true" -->
    img.onmousedown = ptzCenter;
    <!--#if expr="$showPTZCrosshair != no" -->
      cross.onmousedown = ptzCenter;
    <!--#endif -->
  <!--#endif -->
  } else if (mode == "joystick") {
    ptzmode = "joystick";
    img.onmousedown = ptzJoystick_start;
    <!--#if expr="$showPTZCrosshair != no" -->
      cross.onmousedown = ptzJoystick_start;
    <!--#endif -->
  } else {
    ptzmode = "off";
  }
}

<!--#if expr="$(root_PTZ_Support_S$camnbr$_AreaZoom) != true" -->
function ptzCenter(event)
{
  if (!event) event = window.event;
  var mousePos = getMousePosition(event);
  var imgPos = getPos(img);
<!--#if expr="_$camnbr != _" -->
  <!--#set var="idx" val="$camnbr$" -->
<!--#else -->
  <!--#set var="idx" val="1" -->
<!--#endif -->
  var speed = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$idx$_MoveSpeed) != _" --><!--#echo var="root_PTZ_UserAdv_U$idx$_MoveSpeed" option="encoding:javascript" --><!--#else -->70<!--#endif -->", 10);
  mousePos.x -= imgPos.x;
  mousePos.y -= imgPos.y;
  var cmd = "speed="+speed+"&center="+mousePos.x+","+mousePos.y+"&imagewidth="+imgPos.w+"&imageheight="+imgPos.h<!--#if expr="_$zoom != _" -->+"&zoom=<!--#echo var="zoom" option="encoding:javascript" -->"<!--#endif -->;
  ptzCommand(cmd);
  return false;
}

<!--#endif -->

function ptzJoystick_start(event)
{
  img.onmousemove = ptzJoystick;
  img.onmouseup = ptzStop;
  img.onmouseout  = ptzStop;
  window.onblur   = ptzStop;
  <!--#if expr="$showPTZCrosshair != no" -->
    cross.onmousemove = ptzJoystick;
    cross.onmouseup = ptzStop;
  <!--#endif -->
  document.onmouseup = ptzStop;

  ptzJoystick(event);

  return false;
}

function ptzJoystick(event)
{
  var mousePos = getMousePosition(event);
  var imgPos = getPos(img);
  mousePos.x -= imgPos.x;
  mousePos.y -= imgPos.y;
  var pspeed = 100 * (mousePos.x*2 - imgPos.w) / imgPos.w;
  var tspeed = -100 * (mousePos.y*2 - imgPos.h) / imgPos.h;
  var cmd = "continuouspantiltmove="+Math.floor(pspeed)+","+Math.floor(tspeed);
  ptzCommand(cmd);
  return false; // Returning false prevents image drag'n'drop behaviour in mozilla.
}

function ptzStop(event)
{
  img.onmouseup   = undefinedVar;
  img.onmousemove = undefinedVar;
  img.onmouseout  = undefinedVar;

  <!--#if expr="$showPTZCrosshair != no" -->
    cross.onmouseup   = undefinedVar;
    cross.onmousemove = undefinedVar;
  <!--#endif -->
  document.onmouseup = undefinedVar;

  var cmd = "continuouspantiltmove=0,0";
  ptzCommand(cmd, true);
  return false;
}

var ptzRequest = AxisConnectionFactory.createAjaxConnection();
ptzRequest.setOverrideMimeType( 'text/plain' );

var ptzCommand_queue = false;
function ptzCommand(cmdstring, que)
{

  if (ptzRequest.getReadyState() > 0 && ptzRequest.getReadyState() < 4) {
    if (que) {
      ptzCommand_queue = cmdstring;
    }
    return false;
  }


  var now = new Date();
  var ptzUrl = "/axis-cgi/com/ptz.cgi?camera=<!--#echo var="camnbr" option="encoding:url" -->&";
  ptzUrl += cmdstring;
<!--#if expr="_$zoom != _" -->
  ptzUrl += "&zoom=<!--#echo var="zoom" option="encoding:url" -->";
<!--#endif -->
  if (imagerotation != "")
    ptzUrl += "&imagerotation=" + imagerotation;
  ptzUrl += "&timestamp=" + now.getTime();

  AxisConnectionFactory.sendAsync(["GET", ptzUrl], null, ptzCommand_onreadystatechange, ptzRequest);

}

function ptzCommand_onreadystatechange()
{
  try
  {
    if(ptzRequest.getStatus() == 401)
    {
      return;
    }
  }
  catch( e )
  {
  }

  if (typeof(ptzRequest) == 'object' && ptzRequest.getReadyState() == 4) {
    if (ptzCommand_queue) {
      var cmdstring = ptzCommand_queue;
      ptzCommand_queue = false;
      ptzCommand(cmdstring);
    }
  }
}

function selectVideoOrPtz(selection)
{
  if (selection == "video") {
    document.getElementById("videoselection").className = "selectedTab";
    document.getElementById("ptzselection").className = "unselectedTab";
    document.getElementById("videoItems").className = "shownItems";
    document.getElementById("ptzItems").className = "collapsed";
  } else {
    document.getElementById("videoselection").className = "unselectedTab";
    document.getElementById("ptzselection").className = "selectedTab";
    document.getElementById("videoItems").className = "collapsed";
    document.getElementById("ptzItems").className = "shownItems";
  }
}

function setPtzMode()
{
  if (document.getElementById("ptzModeSelector").selectedIndex == 1) {
    imgNavigation(false);
  } else if (document.getElementById("ptzModeSelector").selectedIndex == 2) {
    centermodeNavigation(true);
  } else {
    imgNavigation(true);
  }
}

function placeHandler(event)
{
  if (!event) event = window.event;
  var mpos = getMousePosition(event);

  thedragbox.onmousemove = dragHandler;
  thedragbox.onmouseup = stopDragging;
  thedragarea.onmousemove = dragHandler;
  thedragarea.onmouseup = stopDragging;
  <!--#if expr="$showPTZCrosshair != no" -->
    cross.onmouseup = stopDragging;
  <!--#endif -->

  thedragbox.style.width = boxdef.w;
  thedragbox.style.height = boxdef.h;
  thedragbox.style.left = mpos.x;
  thedragbox.style.top = mpos.y;

  boxdef.x = mpos.x;
  boxdef.y = mpos.y;
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents image drag'n'drop behaviour in mozilla.
}

function stopDragging(event)
{
  if (!event) event = window.event;
  thedragbox.onmousemove = noAction;
  thedragbox.onmouseup = noAction;
  thedragarea.onmouseup = noAction;
  thedragarea.onmousemove = noAction;
  thedragbox.style.visibility = 'hidden';
  thedragbox.style.cursor = 'crosshair';
  thedragarea.style.cursor = 'crosshair';
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();

  var si = document.getElementById("stream");
  var siPos = getPos(si);
  var boxCenterX = parseInt(thedragbox.style.left.slice(0, -2) - siPos.x + thedragbox.style.width.slice(0, -2)/2, 10);
  var boxCenterY = parseInt(thedragbox.style.top.slice(0, -2) - siPos.y + thedragbox.style.height.slice(0, -2)/2, 10);
  var imgPos = getPos(img);
  if (thedragbox.style.width.slice(0, -2) < 11) {
    var mousePos = getMousePosition(event);
<!--#if expr="_$camnbr != _" -->
  <!--#set var="idx" val="$camnbr$" -->
<!--#else -->
  <!--#set var="idx" val="1" -->
<!--#endif -->
    var speed = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$idx$_MoveSpeed) != _" --><!--#echo var="root_PTZ_UserAdv_U$idx$_MoveSpeed" option="encoding:javascript" --><!--#else -->70<!--#endif -->", 10);
    mousePos.x -= imgPos.x;
    mousePos.y -= imgPos.y;
    var cmd = "speed="+speed+"&center="+mousePos.x+","+mousePos.y+"&imagewidth="+imgPos.w+"&imageheight="+imgPos.h<!--#if expr="_$zoom != _" -->+"&zoom=<!--#echo var="zoom" option="encoding:javascript" -->"<!--#endif -->;
  } else {
    var zoomfactor = parseInt(50*(Math.sqrt(imgPos.w*imgPos.w + imgPos.h*imgPos.h)/radius), 10);
    var cmd = "areazoom=" + boxCenterX + "," + boxCenterY + "," + zoomfactor + "&imagewidth=" + imgPos.w + "&imageheight=" + imgPos.h;
  }
  ptzCommand(cmd); 
  return false;
}

function dragHandler(event)
{
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  resizeBox(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function resizeBox(mouseX, mouseY)
{
  var nX;
  var nY;
  var nW;
  var nH;

// Calculate radius
  var katX = Math.abs(boxdef.x - mouseX)
  var katY = Math.abs(boxdef.y - mouseY)
  radius = Math.sqrt(katX*katX + katY*katY)

  <!--#if expr="_$img_width = _" -->
    nX = boxdef.x - radius*Math.sin(Math.atan(img_width/img_height));
    nY = boxdef.y - radius*Math.cos(Math.atan(img_width/img_height));
  <!--#else -->
    nX = boxdef.x - radius*Math.sin(Math.atan(<!--#echo var="img_width" option="encoding:javascript" -->/<!--#echo var="img_height" option="encoding:javascript" -->));
    nY = boxdef.y - radius*Math.cos(Math.atan(<!--#echo var="img_width" option="encoding:javascript" -->/<!--#echo var="img_height" option="encoding:javascript" -->));
  <!--#endif -->

  nW = 2*(boxdef.x - nX)
  nH = 2*(boxdef.y - nY)

  thedragbox.style.left = nX;
  thedragbox.style.top = nY;
  thedragbox.style.width = nW;
  thedragbox.style.height = nH;
  thedragbox.style.visibility = '';
}


/* =================================== PTZ slider functions =================================== */

  var maxPan = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_PanBarRange) != _" --><!--#echo var="root_PTZ_UserAdv_U$camnbr$_PanBarRange" option="encoding:javascript" -->/2<!--#elif expr="_$(root_PTZ_Limit_L$camnbr$_MaxPan) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MaxPan" option="encoding:javascript" --><!--#else -->180<!--#endif -->", 10);
  var minPan = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_PanBarRange) != _" -->-<!--#echo var="root_PTZ_UserAdv_U$camnbr$_PanBarRange" option="encoding:javascript" -->/2<!--#elif expr="_$(root_PTZ_Limit_L$camnbr$_MinPan) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MinPan" option="encoding:javascript" --><!--#else -->-180<!--#endif -->", 10);
  var panPos   = Math.round((minPan+maxPan)/2);
  var maxTilt = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_TiltBarRange) != _" --><!--#echo var="root_PTZ_UserAdv_U$camnbr$_TiltBarRange" option="encoding:javascript" -->/2<!--#elif expr="_$(root_PTZ_Limit_L$camnbr$_MaxTilt) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MaxTilt" option="encoding:javascript" --><!--#else -->180<!--#endif -->", 10);
  var minTilt = parseInt("<!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_TiltBarRange) != _" -->-<!--#echo var="root_PTZ_UserAdv_U$camnbr$_TiltBarRange" option="encoding:javascript" -->/2<!--#elif expr="_$(root_PTZ_Limit_L$camnbr$_MinTilt) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MinTilt" option="encoding:javascript" --><!--#else -->-180<!--#endif -->", 10);
  var tiltPos  = Math.round((minTilt+maxTilt)/2);
<!--#if expr="$showZoom = yes" -->
  var maxZoom = parseInt("<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxZoom) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MaxZoom" option="encoding:javascript" --><!--#else -->9999<!--#endif -->", 10);
  <!--#if expr="$ZoomFunc = rel" -->
    var minZoom = maxZoom * (-1);
  <!--#else -->
    var minZoom = parseInt("<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MinZoom) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MinZoom" option="encoding:javascript" --><!--#else -->0<!--#endif -->", 10);
  <!--#endif -->
  var zoomPos  = Math.round((minZoom+maxZoom)/2);
<!--#endif -->
<!--#if expr="$showFocus = yes" -->
  var maxFocus = parseInt("<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxFocus) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MaxFocus" option="encoding:javascript" --><!--#else -->9999<!--#endif -->", 10);
  <!--#if expr="$Focus = rel" -->
    var minFocus = maxFocus * (-1);
  <!--#else -->
    var minFocus = parseInt("<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MinFocus) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MinFocus" option="encoding:javascript" --><!--#else -->0<!--#endif -->", 10);
  <!--#endif -->
  var focusPos = Math.round((minFocus + maxFocus)/2);
<!--#endif -->
<!--#if expr="$showIris = yes" -->
  var maxIris = parseInt("<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxIris) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MaxIris" option="encoding:javascript" --><!--#else -->9999<!--#endif -->", 10);
  <!--#if expr="$Iris = rel" -->
    var minIris = maxIris * (-1);
  <!--#else -->
    var minIris = parseInt("<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MinIris) != _" --><!--#echo var="root_PTZ_Limit_L$camnbr$_MinIris" option="encoding:javascript" --><!--#else -->0<!--#endif -->", 10);
  <!--#endif -->
  var irisPos  = Math.round((minIris+maxIris)/2);
<!--#endif -->

var panSlider   = null;
var tiltSlider  = null;
var zoomSlider  = null;
var focusSlider = null;
var irisSlider  = null;

var theNewSliderValue;

var ptzPosInterval = null;
var initiateToolTip = true;

var ptzValues = AxisConnectionFactory.createAjaxConnection();
ptzValues.setOverrideMimeType( 'text/plain' );

var isCtlStarted = false;

function getPtzPositions()
{
  if (ptzValues.getReadyState() > 0 && ptzValues.getReadyState() < 4)
    return;

  var now = new Date();
  var timestamp = now.getTime();
    var url = "/axis-cgi/com/ptz.cgi?query=position,limits&camera=<!--#echo var="camnbr" option="encoding:javascript" -->&html=no";
      if (imagerotation != "")
        url += "&imagerotation=" + imagerotation;
    url += "&timestamp=" + timestamp;
  AxisConnectionFactory.sendAsync(["GET", url], "", showPtzValues, ptzValues);
}

var thePtzValuesArray;
function showPtzValues()
{
  if (ptzPosInterval)
    window.clearTimeout(ptzPosInterval);

  try {
    if (ptzValues.getStatus() == 401) {
      return;
    }
  }
  catch( e ) {}

  if (typeof(ptzValues) == 'object' && ptzValues.getReadyState() == 4) {

    <!--#if expr="$root_PTZ_BoaProtPTZOperator$_$root_System_BoaProtViewer$ = password_anonymous" -->
      if (typeof (ctlStart) == "function" && !isCtlStarted) {
        isCtlStarted = true;
        ctlStart();
      }
    <!--#endif -->

    if (ptzValues.getStatus() == 200) {
      var thePtzValuesString = escape(ptzValues.getResponseText());
      thePtzValuesString = thePtzValuesString.replace(/%3D/g,'=');
      thePtzValuesString = thePtzValuesString.replace(/%0D/g,'');
      thePtzValuesString = thePtzValuesString.replace(/%0A/g,',');
      thePtzValuesArray  = thePtzValuesString.split(",");

      var panValExists   = false;
      var tiltValExists  = false;
      var zoomValExists  = false;
      var focusValExists = false;
      var irisValExists  = false;

      var p, j, v;
      var arrElType;
      var len = (typeof( thePtzValuesArray ) != "undefined") ? thePtzValuesArray.length : 0;

      for (i = 0; i < len; i++)
      {
        arrElType = typeof( thePtzValuesArray[i] );
        if(arrElType.toLowerCase() != "string" )
          continue;
        j = thePtzValuesArray[i].indexOf("=");
        if (j < 0) continue;
        v = thePtzValuesArray[i].substr(j+1);
        p = parseInt(v, 10);
        switch (thePtzValuesArray[i].substr(0, j)) {
          case "pan":
            panPos = p;
            if (!isNaN(panPos))
              panValExists = true;
            break;
          case "tilt":
            tiltPos = p;
            if (!isNaN(tiltPos))
              tiltValExists = true;
            break;
          case "zoom":
            zoomPos = p;
            if (!isNaN(zoomPos))
              zoomValExists = true;
            break;
          <!--#if expr="$showFocus = yes" -->
          <!--#if expr="$Focus = abs" -->
          case "focus":
            focusPos = p;
            if (!isNaN(focusPos))
              focusValExists = true;
            break;
        <!--#endif -->
        <!--#endif -->
        <!--#if expr="$showIris = yes" -->
        <!--#if expr="$Iris = abs" -->
          case "iris":
            irisPos = p;
            if (!isNaN(irisPos))
              irisValExists = true;
            break;
        <!--#endif -->
        <!--#endif -->
          case "MinPan":
            <!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_PanBarRange) != _" -->
              if (<!--#echo var="root_PTZ_UserAdv_U$camnbr$_PanBarRange" option="encoding:javascript" --> > 360)
                minPan = p;
              else
                minPan = -Math.round(<!--#echo var="root_PTZ_UserAdv_U$camnbr$_PanBarRange" option="encoding:javascript" -->/2);
            <!--#else -->
              minPan = p;
            <!--#endif -->
            break;
          case "MaxPan":
            <!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_PanBarRange) != _" -->
              if (<!--#echo var="root_PTZ_UserAdv_U$camnbr$_PanBarRange" option="encoding:javascript" --> > 360)
                maxPan = p;
              else
                maxPan = Math.round(<!--#echo var="root_PTZ_UserAdv_U$camnbr$_PanBarRange" option="encoding:javascript" -->/2);
            <!--#else -->
              maxPan = p;
            <!--#endif -->
            break;
          case "MinTilt":
            <!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_TiltBarRange) != _" -->
              if (<!--#echo var="root_PTZ_UserAdv_U$camnbr$_TiltBarRange" option="encoding:javascript" --> > 360)
                minTilt = p;
              else
                minTilt = -Math.round(<!--#echo var="root_PTZ_UserAdv_U$camnbr$_TiltBarRange" option="encoding:javascript" -->/2);
            <!--#else -->
              minTilt = p;
            <!--#endif -->
            break;
          case "MaxTilt":
            <!--#if expr="_$(root_PTZ_UserAdv_U$camnbr$_TiltBarRange) != _" -->
              if (<!--#echo var="root_PTZ_UserAdv_U$camnbr$_TiltBarRange" option="encoding:javascript" --> > 360)
                maxTilt = p;
              else
                maxTilt = Math.round(<!--#echo var="root_PTZ_UserAdv_U$camnbr$_TiltBarRange" option="encoding:javascript" -->/2);
            <!--#else -->
              maxTilt = p;
            <!--#endif -->
            break;
        <!--#if expr="$showZoom = yes" -->
        <!--#if expr="$ZoomFunc = abs" -->
          case "MinZoom":
            minZoom = p; break;
          case "MaxZoom":
            maxZoom = p; break;
        <!--#else -->
          case "MaxZoom":
            maxZoom = p;
            minZoom = -p; break;
        <!--#endif -->
        <!--#endif -->
        <!--#if expr="$showFocus = yes" -->
        <!--#if expr="$Focus = abs" -->
          case "MinFocus":
            minFocus = p; break;
          case "MaxFocus":
            maxFocus = p; break;
        <!--#else -->
          case "MaxFocus":
            maxFocus = p;
            minFocus = -p; break;
        <!--#endif -->
        <!--#endif -->
        <!--#if expr="$showIris = yes" -->
        <!--#if expr="$Iris = abs" -->
          case "MinIris":
            minIris = p; break;
          case "MaxIris":
            maxIris = p; break;
        <!--#else -->
          case "MaxIris":
            maxIris = p;
            minIris = -p; break;
        <!--#endif -->
        <!--#endif -->
        <!--#if expr="$(root_PTZ_Support_S$camnbr$_AutoFocus) = true" -->
          case "autofocus":
            var oAF = document.getElementById("idAutoFocus");
            if (oAF)
              oAF.style.visibility = (v == "on" ? "visible" : "hidden")
            break;
        <!--#endif -->
        <!--#if expr="$(root_PTZ_Support_S$camnbr$_AutoIris) = true" -->
          case "autoiris":
            var oAI = document.getElementById("idAutoIris");
            if (oAI)
              oAI.style.visibility = (v == "on" ? "visible" : "hidden")
            break;
        <!--#endif -->
        }
      }
    }

    <!--#if expr="$showPan = yes" -->
      if (panSlider)
        panSlider.update(minPan, maxPan, panSlider.value);
      else
        panSlider = new Slider('pan', minPan, maxPan, panPos, true, "horizontal");
      <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsolutePan) = true" -->
        if (panValExists) {
          panSlider.setActual(panPos);
        } else {
          panSlider.removeActual();
        }
      <!--#endif -->
    <!--#endif -->

    <!--#if expr="$showTilt = yes" -->
      if (tiltSlider)
        tiltSlider.update(minTilt, maxTilt, tiltSlider.value);
      else
        tiltSlider = new Slider('tilt', minTilt, maxTilt, tiltPos, true, "vertical");
      <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteTilt) = true" -->
        if (tiltValExists) {
          tiltSlider.setActual(tiltPos);
        } else {
          tiltSlider.removeActual();
        }
      <!--#endif -->
    <!--#endif -->

    <!--#if expr="$showZoom = yes" -->
      if (zoomSlider)
        zoomSlider.update(minZoom, maxZoom, zoomSlider.value);
      else
        zoomSlider = new Slider('zoom', minZoom, maxZoom, zoomPos, true, "horizontal");
      <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteZoom) = true" -->
        if (zoomValExists) {
          zoomSlider.setActual(zoomPos);
        } else {
          zoomSlider.removeActual();
        }
      <!--#endif -->
    <!--#endif -->

    <!--#if expr="$showFocus = yes" -->
      if (focusSlider)
        focusSlider.update(minFocus, maxFocus, focusSlider.value);
      else
        focusSlider = new Slider('focus', minFocus, maxFocus, focusPos, true, "horizontal");
      <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteFocus) = true" -->
        if (focusValExists) {
          focusSlider.setActual(focusPos);
        } else {
          focusSlider.removeActual();
        }
      <!--#endif -->
    <!--#endif -->

    <!--#if expr="$showIris = yes" -->
      if (irisSlider)
        irisSlider.update(minIris, maxIris, irisSlider.value);
      else
        irisSlider = new Slider('iris', minIris, maxIris, irisPos, true, "horizontal");
      <!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteIris) = true" -->
        if (irisValExists) {
          irisSlider.setActual(irisPos);
        } else {
          irisSlider.removeActual();
        }
      <!--#endif -->
    <!--#endif -->

    window.clearTimeout(ptzPosInterval);
    if (panValExists || tiltValExists || zoomValExists || focusValExists || irisValExists)
      ptzPosInterval = window.setTimeout(getPtzPositions, position_interval);

    if (initiateToolTip) {
      <!--#if expr="$showPan = yes" -->
        bars.push(new Bar("panbar1", "<!--#if expr="$MovePan = rel" -->r<!--#endif -->pan", 1, 1, Bar.ORIENT_H, Bar.MODE_<!--#if expr="$MovePan = rel" -->R<!--#else -->A<!--#endif -->, panToolTip, 3, 264, minPan, maxPan));
      <!--#endif -->
      <!--#if expr="$showZoom = yes" -->
        bars.push(new Bar("zoombar1", "<!--#if expr="$ZoomFunc = rel" -->r<!--#endif -->zoom", 0, 1, Bar.ORIENT_H, Bar.MODE_<!--#if expr="$ZoomFunc = rel" -->R<!--#else -->A<!--#endif -->, zoomToolTip, 3, 264, minZoom, maxZoom));
      <!--#endif -->
      <!--#if expr="$showFocus = yes" -->
        bars.push(new Bar("focusbar1", "<!--#if expr="$Focus = rel" -->r<!--#endif -->focus", 0, <!--#if expr="$Focus = rel" -->3<!--#else -->1<!--#endif -->, Bar.ORIENT_H, Bar.MODE_<!--#if expr="$Focus = rel" -->R<!--#else -->A<!--#endif -->, focusToolTip, 3, 264, minFocus, maxFocus));
      <!--#endif -->
      <!--#if expr="$showIris = yes" -->
        bars.push(new Bar("irisbar1", "<!--#if expr="$Iris = rel" -->r<!--#endif -->iris", 0, <!--#if expr="$Iris = rel" -->3<!--#else -->1<!--#endif -->, Bar.ORIENT_H, Bar.MODE_<!--#if expr="$Iris = rel" -->R<!--#else -->A<!--#endif -->, irisToolTip, 3, 264, minIris, maxIris));
      <!--#endif -->
      <!--#if expr="$showTilt = yes" -->
        bars.push(new Bar("tiltbar1", "<!--#if expr="$MoveTilt = rel" -->r<!--#endif -->tilt", 1, 1, Bar.ORIENT_V, Bar.MODE_<!--#if expr="$MoveTilt = rel" -->R<!--#else -->A<!--#endif -->, tiltToolTip, 18, 214, minTilt, maxTilt));
      <!--#endif -->

      createToolTip("toolTip", 0, 300, TOOLTIP_STYLE2, 15, 15, TOOLTIP_FOLLOWMOUSE);

      initiateToolTip = false;
    }
  }
}

var newPtzVal = AxisConnectionFactory.createAjaxConnection();
newPtzVal.setOverrideMimeType( 'text/plain' );
function slider_onChange(group)
{
  if ((group == "pan" && "<!--#echo var="MovePan" option="encoding:javascript" -->" == "rel") ||
      (group == "tilt" && "<!--#echo var="MoveTilt" option="encoding:javascript" -->" == "rel") ||
      (group == "zoom" && "<!--#echo var="ZoomFunc" option="encoding:javascript" -->" == "rel") ||
      (group == "focus" && "<!--#echo var="Focus" option="encoding:javascript" -->" == "rel") ||
      (group == "iris" && "<!--#echo var="Iris" option="encoding:javascript" -->" == "rel")) {
    group = "r" + group;
  }

  var url = "/axis-cgi/com/ptz.cgi?camera=<!--#echo var="camnbr" option="encoding:url" -->&"+group+"="+parseInt(theNewSliderValue, 10);
  if (imagerotation != "")
    url += "&imagerotation=" + imagerotation;

  if (newPtzVal.getReadyState() > 0 || newPtzVal.getReadyState() < 4)
    newPtzVal.abort();
  
  AxisConnectionFactory.sendAsync(["GET", url], "", newPtzVal_onchange, newPtzVal);
}

function newPtzVal_onchange()
{
  if (ptzPosInterval)
    window.clearTimeout(ptzPosInterval);

  try {
    if(newPtzVal.getStatus() == 401) {
      return;
    }
  }
  catch(e) {}

  if (typeof(newPtzVal) == 'object' && newPtzVal.getReadyState() == 4) {
    var responseText = newPtzVal.getResponseText();
    if (responseText.length > 0)
      alert(responseText.replace(/<.*>/ig, "").trim() );

    ptzPosInterval = window.setTimeout(getPtzPositions, position_interval);
  }
}

/* =================================== Continuous move (arrows) =================================== */

var newContMove = AxisConnectionFactory.createAjaxConnection();
newContMove.setOverrideMimeType( 'text/plain' );

var mouseUp;

function continousMove(action, val)
{
  mouseUp = (val == "0,0" || val == "0");
  var theAction = "continuous";
  if (action == "pan" || action == "tilt") theAction += "pantiltmove=";
  else if (action == "zoom") theAction += "zoommove=";
  else if (action == "focus") theAction += "focusmove=";
  else if (action == "iris") theAction += "irismove=";
  else if (action == "brightness") theAction += "brightnessmove=";

  theAction += val;

  if (imagerotation != "")
    theAction += "&imagerotation=" + imagerotation;

  if (newContMove.getReadyState() > 0 && newContMove.getReadyState() < 4)
    newContMove.abort();

  var now = new Date();
  AxisConnectionFactory.sendAsync(["GET", "/axis-cgi/com/ptz.cgi?camera=<!--#echo var="camnbr" option="encoding:url" -->&"+theAction + "&timestamp=" + now.getTime()], "", newContMove_onchange, newContMove);
  delete now;
}

function newContMove_onchange()
{
  if( ptzPosInterval )
    window.clearTimeout(ptzPosInterval);

  try {
    if(newContMove.getStatus() == 401) {
      return;
    }
  }
  catch(e) {}

  if (typeof(newContMove) == 'object' && newContMove.getReadyState() == 4) {
    var responseText = newContMove.getResponseText();
    if (responseText.length > 0) {
      if (!mouseUp) {
        // Don't show the pop-up on the mouse up event.
        var alertTxt = responseText.replace(/<.*>/ig, "").trim();
        var panEnabled = <!--#if expr="$(root_PTZ_Various_V$camnbr$_PanEnabled) = false" -->false<!--#else -->true<!--#endif -->;
        var tiltEnabled = <!--#if expr="$(root_PTZ_Various_V$camnbr$_TiltEnabled) = false" -->false<!--#else -->true<!--#endif -->;
        if (!((alertTxt.indexOf('pan') != -1 && !panEnabled) || (alertTxt.indexOf('tilt') != -1 && !tiltEnabled)))
          alert(alertTxt);
      }
    }
    ptzPosInterval = window.setTimeout(getPtzPositions, position_interval);
  }
}

/* =================================== Generic object and event functions =================================== */

function getObjX(obj)
{
  var pos = 0;
  if (obj.offsetParent) {
    while(obj.offsetParent) {
      pos += obj.offsetLeft;
      obj = obj.offsetParent;
    }
  } else if (obj.x) {
    pos = obj.x;
  }
  return pos;
}

function getObjY(obj)
{
  var pos = 0;
  if (obj.offsetParent) {
    while(obj.offsetParent) {
      pos += obj.offsetTop;
      obj = obj.offsetParent;
    }
  } else if (obj.y) {
    pos = obj.y;
  }
  return pos;
}

function getEventX(e)
{
  if (e.pageX) {
    return e.pageX;
  } else if (e.clientX) {
    return (e.clientX + document.body.scrollLeft);
  }
}

function getEventY(e)
{
  if (e.pageY) {
    return e.pageY;
  } else if (e.clientY) {
    return (e.clientY + document.body.scrollTop);
  }
}


/* =================================== PTZ bar and tooltip handling =================================== */

// Array to hold all bars
var bars = new Array();

// Bar data object:
// element_id   : ID of bar container element. Offsets and values are calculated from this element's geometry.
// api_cmd      : PTZ API command to send as action when bar is clicked.
// value_prec   : precision of value to send (number of decimals).
// linear:      : if != 1, the scale of the bar is not linear. Try 3 for non-linear behaviour.
// orientation  : Bar.ORIENT_H for horizontal bar,  Bar.ORIENT_V for vertical bar.
// mode         : Bar.MODE_A for absolute bar, Bar.MODE_R for relative bar.
// tooltip_func : Function taking a bar object as argument and returns a string to set as tooltip,
//                or set undefined to disable tooltip.
// range_start  : Pixel offset at which the bar scale starts.
// range_end    : Pixel offset at which the bar scale ends.
// min_val      : value of scale at range_start.
// max_val      : value of scale at range_end.

Bar.ORIENT_H = 1;
Bar.ORIENT_V = 2;
Bar.MODE_A = 3;
Bar.MODE_R = 4;

function Bar(element_id, api_cmd, value_prec, linear, orientation, mode, tooltip_func, range_start, range_end, min_val, max_val)
{
  this.element_id = element_id;
  this.api_cmd = api_cmd;
  this.value_prec = value_prec;
  this.linear=linear;
  this.orientation = (orientation == Bar.ORIENT_V) ? Bar.ORIENT_V : Bar.ORIENT_H;
  this.mode = (mode == Bar.MODE_A) ? Bar.MODE_A : Bar.MODE_R;
  this.tooltip_func = tooltip_func;
  this.range_start = range_start;
  this.range_end = range_end;
  this.min_val = min_val;
  this.max_val = max_val;
  this.value = undefined;
  this.timer = undefined;
  this.lastvalue = undefined;
}

// Get bar value at event mouse position
function getBarValue(event, target, bar)
{
  var bar_pos = (bar.orientation == Bar.ORIENT_H) ? getObjX(target) : getObjY(target);
  var click_pos = (bar.orientation == Bar.ORIENT_H) ? getEventX(event) : getEventY(event);
  var offset = click_pos-bar_pos - bar.range_start;
  var span = bar.range_end - bar.range_start;
  var pos; // 0 ... 1
  var val; // bar.min_val ... bar.max_val
  if (bar.orientation == Bar.ORIENT_H) {
    if (offset < 0) {
      val = bar.min_val;
    } else if (offset > span) {
      val = bar.max_val;
    } else {
      pos = offset/span;
    }
  } else {
    if (offset < 0) {
      val = bar.max_val;
    } else if (offset > span) {
      val = bar.min_val;
    }
    pos = (span - offset)/span;
  }
  if (val == undefined) {
    if (bar.linear != 1) {
      if (bar.mode == Bar.MODE_A) {
        // Non-linear absolute
        pos = Math.pow(pos,bar.linear)/Math.pow(1,bar.linear);
        val = bar.min_val + pos * (bar.max_val - bar.min_val);
      } else {
        // Non-linear relative
        val = 2*(pos-0.5); // +/- 1.0
        val = Math.abs(Math.pow(val,bar.linear)/Math.pow(1,bar.linear));
        if (pos < 0.5)
          val = bar.min_val * (val);
        else
          val = bar.max_val * (val);
      }
    } else {
      if (bar.mode == Bar.MODE_A) {
       // Linear absolute
        val = bar.min_val + pos * (bar.max_val - bar.min_val);
      } else {
        // Linear relative
        if (pos < 0.5)
          val = bar.min_val * ((0.5-pos) * 2);
        else
          val = bar.max_val * ((pos-0.5) * 2);
      }
    }
  }
  theNewSliderValue = val;
  return val;
}

// Update a tooltip, if bar value have changed (mouse have moved)
function updateBarTooltip(bar)
{
  if (bar.value == bar.lastvalue) {
    // Mouse have stopped, disable tooltip updates.
    window.clearInterval(bar.timer);
    bar.timer = undefined;
    bar.lastvalue = undefined;
  } else {
    var status = bar.tooltip_func(bar);
    if (bar.lastvalue == undefined)
      setToolTip("toolTip", bar.element_id, status);
    else
      updateToolTip("toolTip", bar.element_id, status);
    bar.lastvalue = bar.value;
  }
}

// Disable tooltip updates
function handleBarExit(target, event)
{
  if (!event) event = window.event;
  for (var b = 0 ; b < bars.length ; b++) {
    if (bars[b].element_id == target.id) {
      if (bars[b].timer != undefined) {
        window.clearInterval(bars[b].timer);
        bars[b].timer = undefined;
      }
    }
  }
}

// Get bar value at mouse position and update tooltip
function handleBarMove(target, event)
{
  if (!event) event = window.event;
  for (var b = 0 ; b < bars.length ; b++) {
    if (bars[b].element_id == target.id && bars[b].tooltip_func) {
      bars[b].value = getBarValue(event, target, bars[b]);
      if (bars[b].timer == undefined) {
        // Don't update tooltip at each mousemove event, it will cause ugly delays and use too much cpu.
        // Instead, start a timer to update at 10Hz until mouse stoppes moving.
        updateBarTooltip(bars[b]);
        var code = "updateBarTooltip(bars[" + b +"]);";
        bars[b].timer = window.setInterval(code, 100)
      }
      return;
    }
  }
}


/* =================================== PTZ tooltip formatting =================================== */
// These functions can be replaced to suit different products and driver types

function panToolTip(bar)
{
  var str = langObjPTZIncl.getText("ptzInclPanToDegTxt");
  return str.replace(/\[#\]/, Number(bar.value).toFixed(1));
}

<!--#set var="displayAbsolutZoomTooltip" val="no" -->
<!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxFieldAngle) != _" --><!--#if expr="_$(root_PTZ_Limit_L$camnbr$_MaxFieldAngle) != _" --><!--#if expr="$(root_PTZ_Support_S$camnbr$_AbsoluteZoom) != false" -->
  <!--#set var="displayAbsolutZoomTooltip" val="yes" -->
<!--#endif --><!--#endif --><!--#endif -->
function zoomToolTip(bar)
{
<!--#if expr="$displayAbsolutZoomTooltip = yes" -->
  if (typeof(ptzDefMaxZoomList) == "number" && isNaN(ptzDefMaxZoomList))
  {
    var str = langObjPTZIncl.getText("ptzInclXZoomTxt");
    var maxmag = Math.round(<!--#echo var="root_PTZ_Limit_L$camnbr$_MaxFieldAngle" option="encoding:javascript" -->/<!--#echo var="root_PTZ_Limit_L$camnbr$_MinFieldAngle" option="encoding:javascript" -->);
    var mag = 1 + (maxmag-1) * (bar.value/(bar.max_val-bar.min_val));
  }
  else
  {
    var hasOptical = (typeof(ptzDefMaxOpticalZoomMag) == "number" && !isNaN(ptzDefMaxOpticalZoomMag));
    var hasDigital = (typeof(ptzDefMaxDigitalZoomMag) == "number" && !isNaN(ptzDefMaxDigitalZoomMag));
    var mag = 0;
    var preMag = 1;
    var preValue = 0;
    for (var i = 0; i < ptzDefMaxZoomList.length; i++)
    {
      if (bar.value <= ptzDefMaxZoomList[i][0])
      {
        mag = (bar.value - preValue) / (ptzDefMaxZoomList[i][0] - preValue) * (ptzDefMaxZoomList[i][1] - preMag) + preMag;
        break;
      }
      preValue = ptzDefMaxZoomList[i][0];
      preMag = ptzDefMaxZoomList[i][1];
    }
  }
  var str_mag = "";
  var str_optical = langObjPTZIncl.getText("ptzInclXZoomTxt");
  var str_digital = langObjPTZIncl.getText("ptzInclXDZoomTxt");
  var str_optical_digital = langObjPTZIncl.getText("ptzInclXODZoomTxt");
  if (hasOptical && hasDigital)
  {
    if (mag > ptzDefMaxOpticalZoomMag)
      str = str_optical_digital.replace(/\[#D\]/, Number(mag/ptzDefMaxOpticalZoomMag).toFixed(1));
    else
      str = str_optical;
  }
  else if (hasDigital)
  {
    str = str_digital;
  }
  else
  {
    str = str_optical;
  }
  return str.replace(/\[#\]/, Number(mag).toFixed(1));
<!--#else -->
  if (bar.value < <!--#if expr="$ZoomFunc = rel" -->0<!--#else -->zoomPos<!--#endif -->)
    return langObjPTZIncl.getText("ptzInclZoomOutTxt");
  else
    return langObjPTZIncl.getText("ptzInclZoomInTxt");
<!--#endif -->
}

function focusToolTip(bar)
{
  <!--#if expr="$Focus = rel" -->
    var str_n = langObjPTZIncl.getText("ptzInclFocNeTxt");
    var str_f = langObjPTZIncl.getText("ptzInclFocFaTxt");
    if (bar.value < 0) {
      var focus = 100 * (bar.value/bar.min_val);
      return str_n.replace(/\[#\]/, Number(focus).toFixed(1));
    } else {
      var focus = 100 * (bar.value/bar.max_val);
      return str_f.replace(/\[#\]/, Number(focus).toFixed(1));
    }
  <!--#else -->
    var str_s = langObjPTZIncl.getText("ptzInclsetFocToTxt");
    var focus = 100 * (bar.value/bar.max_val);
    return str_s.replace(/\[#\]/, Number(focus).toFixed(1));
  <!--#endif -->
}

function irisToolTip(bar)
{
  <!--#if expr="$Iris = rel" -->
    var str_c = langObjPTZIncl.getText("ptzInclClIrisTxt");
    var str_o = langObjPTZIncl.getText("ptzInclOpIrisTxt");
    if (bar.value < 0) {
      var iris = 100 * (bar.value/bar.min_val);
      return str_c.replace(/\[#\]/, Number(iris).toFixed(1));
    } else {
      var iris = 100 * (bar.value/bar.max_val);
      return str_o.replace(/\[#\]/, Number(iris).toFixed(1));
    }
  <!--#else -->
    var str_s = langObjPTZIncl.getText("ptzInclSetIrisTxt");
    var iris = 100 * (bar.value/bar.max_val);
    return str_s.replace(/\[#\]/, Number(iris).toFixed(1));
  <!--#endif -->
}

function tiltToolTip(bar)
{
  <!--#if expr="$Tilt = rel" -->
    var str_d = langObjPTZIncl.getText("ptzInclTiDownDegTxt");
    var str_u = langObjPTZIncl.getText("ptzInclTiUpDegTxt");
  <!--#else -->
    var str_d = langObjPTZIncl.getText("ptzInclTiDownToDegTxt");
    var str_u = langObjPTZIncl.getText("ptzInclTiUpToDegTxt");
  <!--#endif -->
  if (bar.value < <!--#if expr="$Tilt = rel" -->0<!--#else -->tiltPos<!--#endif -->) {
    return str_d.replace(/\[#\]/, Number(bar.value).toFixed(1));
  } else {
    return str_u.replace(/\[#\]/, Number(bar.value).toFixed(1));
  }
}

//-->
</script>
