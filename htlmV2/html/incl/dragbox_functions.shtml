// <--------------------->
// dragbox_functions start
// <--------------------->

function getElementPosition(elemID)
{
  var offsetTrail = document.getElementById(elemID);
  var offsetLeft = 0;
  var offsetTop = 0;
  while (offsetTrail) {
    offsetLeft += offsetTrail.offsetLeft;
    offsetTop += offsetTrail.offsetTop;
    offsetTrail = offsetTrail.offsetParent;
  }
  if (navigator.userAgent.indexOf("Mac") != -1 && typeof document.body.leftMargin != "undefined") {
    offsetLeft += parseInt(document.body.leftMargin, 10) - 3;
    offsetTop += parseInt(document.body.topMargin, 10) - 3;
  }
  return {left:offsetLeft, top:offsetTop};
}

function placeHandler(event)
{
  startedEditingArea = true;
  if (!event) event = window.event;
  var mpos = getMousePosition(event);

  thedragbox.onmousemove = dragHandler;
  thedragbox.onmouseup = stopDragging;
  thedragarea.onmousemove = dragHandler;
  thedragarea.onmouseup = stopDragging;

  boxdef.w = 0;
  boxdef.h = 0;
  startX = -1;
  startY = -1;
  thedragbox.style.width = 0;
  thedragbox.style.height = 0;
  thedragbox.style.left = mpos.x;
  thedragbox.style.top = mpos.y;
  thedragbox.style.visibility = '';

  boxdef.x = mpos.x;
  boxdef.y = mpos.y;
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents image drag'n'drop behaviour in mozilla.
}

var startX = -1;
var startY = -1;

var oldMousePosX = 0;
var oldMousePosY = 0;

function stopDragging(event)
{
  if (!event) event = window.event;
  thedragbox.onmousemove = noAction;
  thedragbox.onmouseup = noAction;
  thedragbox.onmousedown = moveHandler;
  thedragarea.onmouseup = noAction;
  thedragarea.onmousemove = noAction;
  thedragbox.style.cursor = 'move';
  thedragarea.style.cursor = 'crosshair';
  oldMousePosX = 0; // Reset after moveBox(mouseX, mouseY)
  oldMousePosY = 0;
  setBorders();
  window.document.onmouseup = noAction;
  if (typeof setWindowValues == "function")
    setWindowValues();

  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false;
}

function setBorders()
{
  boxBorderN.style.left = boxdef.x;
  boxBorderN.style.top = boxdef.y;
  boxBorderN.style.width = boxdef.w;
  boxBorderN.style.height = 10;
  boxBorderN.style.visibility = ''
  boxBorderN.style.cursor = 'n-resize';
  boxBorderN.onmousedown = resizeHandlerN;
  boxBorderN.onmouseup = noAction;
  boxBorderN.onmousemove = noAction;

  boxBorderE.style.left = boxdef.x + boxdef.w - 10;
  boxBorderE.style.top = boxdef.y;
  boxBorderE.style.width = 10;
  boxBorderE.style.height = boxdef.h;
  boxBorderE.style.visibility = ''
  boxBorderE.style.cursor = 'e-resize';
  boxBorderE.onmousedown = resizeHandlerE;
  boxBorderE.onmouseup = noAction;
  boxBorderE.onmousemove = noAction;

  boxBorderS.style.left = boxdef.x;
  boxBorderS.style.top = boxdef.y + boxdef.h - 10;
  boxBorderS.style.width = boxdef.w;
  boxBorderS.style.height = 10;
  boxBorderS.style.visibility = ''
  boxBorderS.style.cursor = 's-resize';
  boxBorderS.onmousedown = resizeHandlerS;
  boxBorderS.onmouseup = noAction;
  boxBorderS.onmousemove = noAction;

  boxBorderW.style.left = boxdef.x;
  boxBorderW.style.top = boxdef.y;
  boxBorderW.style.width = 10;
  boxBorderW.style.height = boxdef.h;
  boxBorderW.style.visibility = ''
  boxBorderW.style.cursor = 'w-resize';
  boxBorderW.onmousedown = resizeHandlerW;
  boxBorderW.onmouseup = noAction;
  boxBorderW.onmousemove = noAction;
  return;
}

function removeBorders()
{
  boxBorderN.style.visibility = 'hidden'
  boxBorderN.onmousedown = noAction;
  boxBorderN.onmouseup = noAction;
  boxBorderN.onmousemove = noAction;

  boxBorderE.style.visibility = 'hidden'
  boxBorderE.onmousedown = noAction;
  boxBorderE.onmouseup = noAction;
  boxBorderE.onmousemove = noAction;

  boxBorderS.style.visibility = 'hidden'
  boxBorderS.onmousedown = noAction;
  boxBorderS.onmouseup = noAction;
  boxBorderS.onmousemove = noAction;

  boxBorderW.style.visibility = 'hidden'
  boxBorderW.onmousedown = noAction;
  boxBorderW.onmouseup = noAction;
  boxBorderW.onmousemove = noAction;
  return;
}

function resizeHandlerN(event)
{
  startedEditingArea = true;
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  resizeN(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function resizeHandlerE(event)
{
  startedEditingArea = true;
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  resizeE(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function resizeHandlerS(event)
{
  startedEditingArea = true;
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  resizeS(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function resizeHandlerW(event)
{
  startedEditingArea = true;
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  resizeW(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function moveHandler(event)
{
  startedEditingArea = true;
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  moveBox(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function resizeN(mouseX, mouseY)
{
  if (oldMousePosY != 0) {
    var limit_S = parseInt(boxBorderS.style.top.slice(0, -2), 10) - 10;
    var d = mouseY - oldMousePosY;
    if (boxdef.y + d > imagepos.y && boxdef.h - d >= 20) {
      boxdef.y += d;
      boxdef.h -= d;
    } else if (boxdef.y + d <= imagepos.y) {
      boxdef.h += boxdef.y - imagepos.y;
      boxdef.y = imagepos.y
    } else if (boxdef.h - d < 20) {
      boxdef.y = limit_S;
      boxdef.h = 20;
    }
    thedragbox.style.top = boxdef.y;
    thedragbox.style.height = boxdef.h;
    boxBorderN.style.top = boxdef.y;
    boxBorderE.style.top = boxdef.y;
    boxBorderW.style.top = boxdef.y;
    boxBorderE.style.height = thedragbox.style.height;
    boxBorderW.style.height = thedragbox.style.height;
  }
  oldMousePosY = mouseY;
  window.document.onmouseup = stopDragging;
  boxBorderN.onmousemove = resizeHandlerN;
  thedragbox.onmousemove = resizeHandlerN;
  thedragarea.onmousemove = resizeHandlerN;
  boxBorderN.onmouseup = stopDragging;
  thedragbox.onmouseup = stopDragging;
}

function resizeE(mouseX, mouseY)
{
  if (oldMousePosX != 0) {
    boxdef.w += (mouseX - oldMousePosX);
    if ((boxdef.w + boxdef.x) > (imagepos.x + thedragarea.width)) {
      boxdef.w = imagepos.x + thedragarea.width - boxdef.x
    } else if (boxdef.w < 20) {
      boxdef.w = 20;
    }
    thedragbox.style.width = boxdef.w;
    boxBorderE.style.left = boxdef.x + boxdef.w - 10;
    boxBorderN.style.width = boxdef.w;
    boxBorderS.style.width = boxdef.w;
  }
  oldMousePosX = mouseX
  window.document.onmouseup = stopDragging;
  boxBorderE.onmousemove = resizeHandlerE;
  thedragbox.onmousemove = resizeHandlerE;
  thedragarea.onmousemove = resizeHandlerE;
  boxBorderE.onmouseup = stopDragging;
  thedragbox.onmouseup = stopDragging;
}

function resizeS(mouseX, mouseY)
{
  if (oldMousePosY != 0) {
    boxdef.h += (mouseY - oldMousePosY);
    if ((boxdef.h + boxdef.y) > (imagepos.y + thedragarea.height)) {
      boxdef.h = imagepos.y + thedragarea.height - boxdef.y
    } else if (boxdef.h < 20) {
      boxdef.h = 20;
    }
    thedragbox.style.height = boxdef.h;
    boxBorderS.style.top = boxdef.y + boxdef.h - 10;
    boxBorderE.style.height = boxdef.h;
    boxBorderW.style.height = boxdef.h;
  }
  window.document.onmouseup = stopDragging;
  oldMousePosY = mouseY
  boxBorderS.onmousemove = resizeHandlerS;
  thedragbox.onmousemove = resizeHandlerS;
  thedragarea.onmousemove = resizeHandlerS;
  boxBorderS.onmouseup = stopDragging;
  thedragbox.onmouseup = stopDragging;
}

function resizeW(mouseX, mouseY)
{
  if (oldMousePosX != 0) {
    var limit_E = parseInt(boxBorderE.style.left.slice(0, -2), 10) - 20;
    var d = mouseX - oldMousePosX;
    if (boxdef.x + d > imagepos.x && boxdef.w - d >= 20) {
      boxdef.x += d;
      boxdef.w -= d;
    } else if (boxdef.x + d <= imagepos.x) {
      boxdef.w += boxdef.x - imagepos.x;
      boxdef.x = imagepos.x;
    } else if (boxdef.w - d < 20 ) {
      boxdef.x = limit_E;
      boxdef.w = 20;
    }
    thedragbox.style.left = boxdef.x;
    thedragbox.style.width = boxdef.w;
    boxBorderW.style.left = boxdef.x;
    boxBorderN.style.left = boxdef.x;
    boxBorderS.style.left = boxdef.x;
    boxBorderN.style.width = boxdef.w;
    boxBorderS.style.width = boxdef.w;
  }
  window.document.onmouseup = stopDragging;
  boxBorderW.onmousemove = resizeHandlerW;
  thedragbox.onmousemove = resizeHandlerW;
  thedragarea.onmousemove = resizeHandlerW;
  boxBorderW.onmouseup = stopDragging;
  thedragbox.onmouseup = stopDragging;
  oldMousePosX = mouseX
}

function moveBox(mouseX, mouseY)
{
  if (oldMousePosX != 0) {
    var dx = (mouseX - oldMousePosX);
    if (boxdef.x + dx < dragboxarea.left) {
      boxdef.x = dragboxarea.left;
    } else if ((boxdef.x + boxdef.w + dx) > (dragboxarea.left + thedragarea.width)) {
      boxdef.x = dragboxarea.left + thedragarea.width - boxdef.w;
    } else {
      boxdef.x += dx;
    }

    var dy = (mouseY - oldMousePosY);
    if (boxdef.y + dy < dragboxarea.top) {
      boxdef.y = dragboxarea.top;
    } else if ((boxdef.y + boxdef.h + dy) > (dragboxarea.top + thedragarea.height)) {
      boxdef.y = dragboxarea.top + thedragarea.height - boxdef.h;
    } else {
      boxdef.y += dy
    }
    thedragbox.style.left = boxdef.x;
    thedragbox.style.top = boxdef.y;
  }
  oldMousePosX = mouseX
  oldMousePosY = mouseY
  thedragbox.onmousemove = moveHandler;
  thedragbox.onmouseup = stopDragging;
  thedragarea.onmousemove = moveHandler;
  thedragarea.onmouseup = stopDragging;
  removeBorders();
}

function dragHandler(event)
{
  if (!event) event = window.event;
  var mpos = getMousePosition(event);
  resizeBox(mpos.x, mpos.y);
  event.cancelBubble = true;
  if (event.stopPropagation) event.stopPropagation();
  return false; // Returning false prevents event bubbling
}

function resizeBox(mouseX, mouseY)
{
  var nX;
  var nY;
  var nW;
  var nH;
  var xdir;
  var ydir;

  if (startX < 0 || startY < 0) {
    startX = mouseX;
    startY = mouseY;
  }
  if (mouseX < startX) {
    xdir = 'w';
    nX = mouseX;
    nW = startX - mouseX;
  } else {
    xdir = 'e';
    nX = startX;
    nW = mouseX - startX;
  }
  if (mouseY < startY) {
    ydir = 'n';
    nY = mouseY;
    nH = startY - mouseY;
  } else {
    ydir = 's';
    nY = startY;
    nH = mouseY - startY;
  }
  boxdef.x = nX;
  boxdef.w = nW;
  boxdef.y = nY;
  boxdef.h = nH;
  thedragbox.style.cursor = ydir + xdir + "-resize";
  thedragarea.style.cursor = ydir + xdir + "-resize";
  thedragbox.style.left = nX;
  thedragbox.style.top = nY;
  thedragbox.style.width = nW;
  thedragbox.style.height = nH;
}



var reCalcX, reCalcY, reCalcW, reCalcH;

function recalculateCoords(xIn,yIn,widthIn,heightIn,rotation,imgWidth,imgHeight,mirrored,drawOrSave)
{
  var x0 = xIn;
  var y0 = yIn;
  var x1 = x0 + widthIn;
  var y1 = y0;
  var x2 = x1;
  var y2 = y0 + heightIn;
  var x3 = x0;
  var y3 = y2;
  var x0b = x0;
  var y0b = y0;
  var x1b = x1;
  var y3b = y3;

  if (rotation == 90 || rotation == 270) {
    var widthOut  = heightIn;
    var heightOut = widthIn;
  } else {
    var widthOut  = widthIn;
    var heightOut = heightIn;
  }

  if (rotation == 180) {
    x0b = imgWidth - x2;
    y0b = imgHeight - y2;
    x1b = imgWidth - x3;
    y3b = imgHeight - y1;
  }

  if (drawOrSave == "draw") {
    if (rotation == 90) {
      x0b = imgHeight - y3;
      y0b = x3;
      x1b = imgHeight - y0;
      y3b = x2;
    } else if (rotation == 270) {
      x0b = y1;
      y0b = imgWidth - x1;
      x1b = y2;
      y3b = imgWidth - x0;
    }
    if (mirrored == "yes") {
      if (rotation == 0 || rotation == 180) {
        x0b = imgWidth - x1b;
      } else {
        y0b = imgWidth - y3b;
      }
    }
  } else {
    if (rotation == 90) {
      x0b = y1;
      y0b = imgHeight - x1;
      x1b = y2;
    } else if (rotation == 270) {
      x0b = imgWidth - y3;
      y0b = x3;
      x1b = imgWidth - y0;
    }
    if (mirrored == "yes") {
      x0b = imgWidth - x1b;
    }
  }

  reCalcX = x0b;
  reCalcY = y0b;
  reCalcW = widthOut;
  reCalcH = heightOut;
}

// <--------------------->
// dragbox_functions end
// <--------------------->
