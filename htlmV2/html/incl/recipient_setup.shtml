    <!--#include virtual="/sm/sm.srv?action=get&group=Network.IPv6.Enabled" -->
    <!--#set var="IPv6_Enabled" val="$root_Network_IPv6_Enabled" -->

<script type="text/javascript" language="javascript">
<!--
  var langObjEventsRecipSet = new Language("incl_servers", "recipient_setup");
  langObjEventsRecipSet.init(false, true);

  //GLOBAL SMTP providers
  var smtpproviders = new Array();
  smtpproviders["aol"] = { host: "smtp.aol.com", port: "587", encryption: "tls", validateServerCert: true };
  smtpproviders["gmail"] = { host: "smtp.gmail.com", port: "587", encryption: "tls", validateServerCert: true };
  smtpproviders["hotmail"] = { host: "smtp.live.com", port: "587", encryption: "tls", validateServerCert: true };
  smtpproviders["yahoo"] = { host: "smtp.mail.yahoo.com", port: "465", encryption: "ssl", validateServerCert: true };

  var global_pop_port = "110";

  var statusErrorArr = new Array();
  
  <!--#if expr="$doAction = add" -->
    var allowedTypes = new Array();
  <!--#endif -->
  function onInit()
  {
    <!--#if expr="$doAction = view" -->
      disable_inputs();
    <!--#endif -->
    getRecipientNameList();

    <!--#if expr="$doAction = add" -->
      <!--#if expr="_$allowedTypes != _" -->
        allowedTypes = ("<!--#echo var="allowedTypes" option="encoding:url" -->").split(",");
      <!--#endif -->
    <!--#endif -->
    getRecipientTemplates();
    <!--#if expr="$doAction != add" -->
      setFields();
    <!--#endif -->
  }
  addLoadEvent( onInit );

  var ajaxRequest = AxisConnectionFactory.createAjaxConnection();
  function sendAction(action)
  {
    AxisConnectionFactory.sendSync(["GET", action], "", ajaxRequest);
    var result = (ajaxRequest.getStatus() == 200 ? ajaxRequest.getResponseXml() : null);
    return result;
  }

  <!--#if expr="$doAction != add" -->
    function setFields()
    {
      document.getElementById("recipientName").value = unescape("<!--#echo var="name" option="encoding:url" -->");

      if( shownTemplateType == "ftp" )
      {
        document.getElementById("ftp_host").value = unescape("<!--#echo var="host" option="encoding:url" -->");
        document.getElementById("ftp_upload_path").value = unescape("<!--#echo var="upload_path" option="encoding:url" -->");
        document.getElementById("ftp_port").value = unescape("<!--#echo var="port" option="encoding:url" -->");
        document.getElementById("ftp_login").value = unescape("<!--#echo var="login" option="encoding:url" -->");
        document.getElementById("ftp_password").value = unescape("<!--#echo var="password" option="encoding:url" -->");
        document.getElementById("ftp_passive_mode").checked = ( ( unescape("<!--#echo var="passive" option="encoding:url" -->") == "1" )?true:false );
        document.getElementById("ftp_temporary_mode").checked = ( ( unescape("<!--#echo var="temporary" option="encoding:url" -->") == "1" )?true:false );
      }
      else if( shownTemplateType == "http" || shownTemplateType == "https" )
      {
        document.getElementById(shownTemplateType+"_url").value = unescape("<!--#echo var="upload_url" option="encoding:url" -->");
        document.getElementById( shownTemplateType+"_login" ).value = unescape("<!--#echo var="login" option="encoding:url" -->");
        document.getElementById( shownTemplateType+"_password"  ).value = unescape("<!--#echo var="password" option="encoding:url" -->");
        <!--#if expr="_$proxy_host != _" -->
          document.getElementById( shownTemplateType+"_proxySet").checked = true;

          document.getElementById( shownTemplateType+"_proxyHost").value = unescape("<!--#echo var="proxy_host" option="encoding:url" -->");
          document.getElementById( shownTemplateType+"_proxyPort").value = unescape("<!--#echo var="proxy_port" option="encoding:url" -->");
          document.getElementById( shownTemplateType+"_proxyLogin").value = unescape("<!--#echo var="proxy_login" option="encoding:url" -->");
          document.getElementById( shownTemplateType+"_proxyPassword").value = unescape("<!--#echo var="proxy_password" option="encoding:url" -->");
          toggleProxySettings( document.getElementById( shownTemplateType+"_proxySet"), shownTemplateType );
        <!--#endif -->

        if( shownTemplateType == "https" )
        {
          document.getElementById("https_validate_server_cert").checked = ( ( unescape("<!--#echo var="validate_server_cert" option="encoding:url" -->") == "1" )?true:false );
        }
      }
      else if( shownTemplateType == "smtp" )
      {
        var email_from = unescape("<!--#echo var="email_from" option="encoding:url" -->");
        var login = unescape("<!--#echo var="login" option="encoding:url" -->");
        var password = unescape("<!--#echo var="password" option="encoding:url" -->");
        document.getElementById("smtp_email_to").value = unescape("<!--#echo var="email_to" option="encoding:url" -->");
        document.getElementById("smtp_email_from").value = email_from;
        document.getElementById("smtp_host").value = unescape("<!--#echo var="host" option="encoding:url" -->");
        document.getElementById("smtp_port").value = unescape("<!--#echo var="port" option="encoding:url" -->");
        if( login.length > 0 || password.length > 0 )
        {
          document.getElementById("smtp_login").value = unescape("<!--#echo var="login" option="encoding:url" -->");
          document.getElementById("smtp_password").value = unescape("<!--#echo var="password" option="encoding:url" -->");
        }
        <!--#if expr="$doAction = view" -->
          document.getElementById("smtp_advanced").checked = true;
          document.getElementById( "smtp_advanced_settings" ).style.display = "block";
        <!--#endif -->
        var pop_url = unescape("<!--#echo var="pop_host" option="encoding:url" -->");
        if( pop_url != "" )
        {
          document.getElementById("smtp_auth_pop").checked = true;
          document.getElementById("smtp_pop_host").value = pop_url;
          global_pop_port = unescape("<!--#echo var="pop_port" option="encoding:url" -->");
          document.getElementById("smtp_login").value = unescape("<!--#echo var="pop_login" option="encoding:url" -->");
          document.getElementById("smtp_password").value = unescape("<!--#echo var="pop_password" option="encoding:url" -->");
        }
        toggleSMTPPOP();

        var encryption = unescape("<!--#echo var="encryption" option="encoding:url" -->");
        var oEnc = document.getElementById("smtp_encryption");
        setSelectlist( oEnc, encryption, false );
        <!--#if expr="$doAction != view" -->
          toggleEncryption( oEnc );
        <!--#endif -->
        document.getElementById("smtp_validateServerCert").checked = ("<!--#echo var="validate_server_cert" option="encoding:url" -->" == "1");

        setSMTPprovider();
      }
      else if( shownTemplateType == "tcp" )
      {
        document.getElementById("tcp_host").value = unescape("<!--#echo var="host" option="encoding:url" -->");
        document.getElementById("tcp_port").value = unescape("<!--#echo var="port" option="encoding:url" -->");
      }
      else if( shownTemplateType == "networkshare" )
      {
        var share = getShare( unescape("<!--#echo var="share_id" option="encoding:url" -->") );

        document.getElementById("networkshare_host").value = share.getAttribute("Address");
        document.getElementById("networkshare_share").value = share.getAttribute("Share");
        document.getElementById("networkshare_upload_path").value = unescape("<!--#echo var="upload_path" option="encoding:url" -->");
        document.getElementById("networkshare_login").value = share.getAttribute("User");

        <!--#if expr="$doAction = view" -->
          if(share.getAttribute("User") != "")
          {
            document.getElementById("networkshare_password").value = "********";
          }
        <!--#endif -->
      }
    }
  <!--#endif -->

  <!--#if expr="$doAction = view" -->
    function disable_inputs()
    {
      var inputs = document.getElementsByTagName("input");
      for( var i = 0; i < inputs.length; i++)
      {
        if (inputs[i].type != "button")
        {
          inputs[i].disabled = true;
        }
      }
      var selects = document.getElementsByTagName("select");
      for( var i = 0; i < selects.length; i++)
      {
        selects[i].disabled = true;
      }
    }
  <!--#endif -->


  var actionNameSpaces = new SOAPClientNS();
  actionNameSpaces.add("aa", "http://www.axis.com/vapix/ws/action1" );
  actionNameSpaces.add("wsnt", "http://docs.oasis-open.org/wsn/b-2" );
  var wsdlUrl = "/wsdl/vapix/ActionService.wsdl";

  var recipientNames = new Array();
  function getRecipientNameList()
  {
    var params = new SOAPClientParameters();
    var now = new Date();
    var timestamp = "?timestamp="+now.getTime();
    var url = "/vapix/services"+timestamp;
    var method = "aa:GetRecipientConfigurations";

    SOAPClient.invoke( wsdlUrl, url, actionNameSpaces, method, params, false, loadRecipientsNameList );
  }

  function loadRecipientsNameList( responseObj )
  {
    if( responseObj )
    {
      var recipientParent = responseObj.RecipientConfigurations;
      if( recipientParent )
      {
        var recipientArr = recipientParent.RecipientConfiguration;
        if( recipientArr )
        {
          if( recipientArr.constructor != Array )
          {
            recipientArr = new Array( recipientArr );
          }
          var len = recipientArr.length;
          for( var i = 0; i < len; i++ )
          {
            recipientNames[ recipientArr[i].Name ] = recipientArr[i].Name;
          }
        }
      }
    }//if response
  }

  function getRecipientTemplates()
  {
    var params = new SOAPClientParameters();
    var now = new Date();
    var timestamp = "?timestamp="+now.getTime();
    var url = "/vapix/services"+timestamp;
    var method = "aa:GetRecipientTemplates";

    SOAPClient.invoke( wsdlUrl, url, actionNameSpaces, method, params, false, loadRecipientsTemplates );
  }

  var templates = new Array();
  function loadRecipientsTemplates( responseObj )
  {
    var selectEl = document.getElementById("recipientTemplates");
    clearSelect( selectEl );
    var isEmpty = true;

    if( responseObj )
    {
      var recipientTemplateParent = responseObj.RecipientTemplates;
      if( recipientTemplateParent )
      {
        var recipientTemplateArr = recipientTemplateParent.RecipientTemplate;
        if( recipientTemplateArr )
        {
          if( recipientTemplateArr.constructor != Array )
          {
            recipientTemplateArr = new Array( recipientTemplateArr );
          }
          var len = recipientTemplateArr.length;
          recipientTemplateArr.sort( sortByTemplateId );
          for( var i = 0; i < len; i++ )
          {
            if( addRecipientTemplate( selectEl, recipientTemplateArr[i] ) )
            {
              isEmpty = false;
            }
          }
        }
      }
    }//if response

    if( isEmpty )
    {
      addSelectOption( selectEl, "", '\u00a0\u00a0----------', true, "gray" );
    }
    else
    {
      toggleRecipentType( selectEl );
    }
  }

  var shownTemplateType = "";
  function addRecipientTemplate( selectEl, templateObj )
  {
    var added = false;
    if( templateObj )
    {
      var id = templateObj.TemplateToken;
      var type = String( id ).replace( "com.axis.recipient.", "" );

      <!--#if expr="$doAction = add" -->
        if( !checkRecipientType( type ) )
        {
          return added;
        }
      <!--#endif -->
      var name = "";
      if( type == "ftp" )
      {
        name = langObjEventsRecipSet.getText("ftpTxt");
      }
      else if( type == "http" )
      {
        name = langObjEventsRecipSet.getText("httpTxt");
      }
      else if( type == "https" )
      {
        name = langObjEventsRecipSet.getText("httpsTxt");
      }
      else if( type == "smtp" )
      {
        name = langObjEventsRecipSet.getText("smtpTxt");
      }
      else if( type == "tcp" )
      {
        name = langObjEventsRecipSet.getText("tcpTxt");
      }
      else if( type == "networkshare" )
      {
        name = langObjEventsRecipSet.getText("nsTxt");
      }

      templates[ id ] = { type:type, name:name, obj:templateObj };

      if( name != "" )
      {
        <!--#if expr="$doAction != add" -->
          if( id == "<!--#echo var="template" option="encoding:javascript" -->" )
          {
            shownTemplateType = type;
            addSelectOption( selectEl, id, name, true );
          }
          else
          {
            addSelectOption( selectEl, id, name, false );
          }
        <!--#else -->
          addSelectOption( selectEl, id, name, false );
        <!--#endif -->
        added = true;
      }
    }
    return added;
  }

  <!--#if expr="$doAction = add" -->
    function checkRecipientType( recipientType )
    {
      var isAccepted = false;
      var len = allowedTypes.length;
      if( len == 0 )
      {
        isAccepted = true;
      }
      else
      {
        for( var i = 0; i < len && !isAccepted; i++ )
        {
          if( allowedTypes[i] == recipientType )
          {
            isAccepted = true;
          }
        }
      }
      return isAccepted;
    }
  <!--#endif -->

  function sortByTemplateId( firstItem, lastItem )
  {
    var retVal = 0;
    //both needs value to be compared
    if( firstItem.TemplateToken && lastItem.TemplateToken )
    {
      retVal = ( firstItem.TemplateToken ).localeCompare( lastItem.TemplateToken );
    }
    return retVal;
  }

  function toggleRecipentType( el )
  {
    var id = el.options[ el.selectedIndex ].value;
    if( id != "" )
    {
      var type = ( templates[ id ].type ).toLowerCase();
      var div = document.getElementById("div_"+type );
      if( div )
      {
        if( shownTemplateType != "" )
        {
          document.getElementById("div_"+shownTemplateType ).style.display = "none";
        }
        document.getElementById("div_"+type ).style.display = "block";
        shownTemplateType = type;
      }
    }
  }

  function toggleProxySettings( el, type )
  {
    document.getElementById( type+"_divProxySettings" ).style.display = ((el.checked)?"block":"none");
  }

  function toggleSMTPAdvanced( el )
  {
    document.getElementById( "smtp_advanced_settings" ).style.display = ((el.checked)?"block":"none");
  }

  function toggleSMTPPOP()
  {
    document.getElementById( "smtp_pop_host" ).disabled = !document.getElementById("smtp_auth_pop").checked;
  }

  function toggleEncryption( el )
  {
    var encryption = el.value;
    var o = document.getElementById( "smtp_validateServerCert" );
    o.disabled = ( encryption == "none" )
  }

  function setSMTPprovider()
  {
    var smtp_providers = document.getElementById("smtp_providers");
    var options = smtp_providers.options;
    var selectOption = -1;

    for( var i=0; i < options.length; i++ )
    {
      if( options[i].value == "user" )
        continue;
      if( smtpproviders[ options[i].value ] == null )
        continue;
      if( smtpproviders[ options[i].value ].host != document.getElementById("smtp_host").value )
        continue;
      if( smtpproviders[ options[i].value ].port != document.getElementById("smtp_port").value )
        break;
      if( smtpproviders[ options[i].value ].encryption != document.getElementById("smtp_encryption").value )
        break;
      if( smtpproviders[ options[i].value ].validateServerCert != document.getElementById("smtp_validateServerCert").checked )
        break;
      if( document.getElementById("smtp_auth_pop").checked )
        break;

      selectOption = i;
      break;
    }

    var isUserDefined = (selectOption == -1);
    selectOption = (isUserDefined ? options.length-1 : selectOption);
    smtp_providers.selectedIndex = selectOption;
    <!--#if expr="$doAction != view" -->
      var smtp_email_from = document.getElementById("smtp_email_from");
      smtp_email_from.disabled = !isUserDefined;
    <!--#endif -->
    var smtp_advanced = document.getElementById( "smtp_advanced" );
    if( isUserDefined )
    {
      smtp_advanced.checked = true;
      smtp_advanced.disabled = true;
      document.getElementById( "smtp_advanced_settings" ).style.display = "block";
    }
    else
    {
      smtp_advanced.disabled = false;
    }
  }

  function setSMTPproviderValues()
  {
    var mailProvider = document.getElementById("smtp_providers").value;
    var smtp_email_from = document.getElementById("smtp_email_from");
    var smtp_advanced = document.getElementById( "smtp_advanced" );

    if(smtpproviders[mailProvider] != null)
    {
      var mailObj = smtpproviders[mailProvider];
      
      smtp_advanced.disabled = false;
      smtp_email_from.disabled = true;
      smtp_email_from.value = "";
      document.getElementById("smtp_host").value = mailObj.host;
      document.getElementById("smtp_port").value = mailObj.port;
      document.getElementById("smtp_auth_smtp").checked = true;
      setSelectlist( document.getElementById("smtp_encryption"), mailObj.encryption, false );
      if( mailObj.encryption != "none" )
      {
        document.getElementById("smtp_validateServerCert").checked = mailObj.validateServerCert;
        document.getElementById("smtp_validateServerCert").disabled = false;
      }
    }
    else
    {
      smtp_advanced.checked = true;
      smtp_advanced.disabled = true;
      document.getElementById( "smtp_advanced_settings" ).style.display = "block";
      smtp_email_from.disabled = false;
    }
    toggleSMTPPOP();
  }

  function saveData()
  {
    if( shownTemplateType != "" )
    {
      var okBtn = document.getElementById("btnOK");
      okBtn.disabled = true;
      if( !testConnection( true ) )
      {
        okBtn.disabled = false;
        return false;
      }
      var nameEl = document.getElementById("recipientName");
      var name = ( nameEl.value ).trim();
      name = name.replace(/</g, "&lt;");
      name = name.replace(/>/g, "&gt;");
      if( name == "" )
      {
        showErrorMsg( langObjEventsRecipSet.getText("nameAlert"), nameEl );
        okBtn.disabled = false;
        return;
      }
      else if( recipientNames[ name ] == name )
      {
        if( !confirm( langObjEventsRecipSet.getText("nameConfirm1")+"\""+name+"\".\n\n"+langObjEventsRecipSet.getText("nameConfirm2")) )
        {
          nameEl.focus();
          nameEl.select();
          okBtn.disabled = false;
          return;
        }
      }

      var obj = new Object();
      obj.TemplateToken = document.getElementById("recipientTemplates").value;
      obj.Name = name;

      var paramArray = new Array();

      if( shownTemplateType == "ftp" )
      {
        if( !validateFTP() )
        {
          okBtn.disabled = false;
          return false;
        }

        paramArray[ paramArray.length ] = new Parameter( "host", document.getElementById("ftp_host").value );
        paramArray[ paramArray.length ] = new Parameter( "upload_path", document.getElementById("ftp_upload_path").value );
        paramArray[ paramArray.length ] = new Parameter( "port", document.getElementById("ftp_port").value );
        paramArray[ paramArray.length ] = new Parameter( "login", document.getElementById( "ftp_login" ).value );
        paramArray[ paramArray.length ] = new Parameter( "password", document.getElementById( "ftp_password"  ).value );

        paramArray[ paramArray.length ] = new Parameter( "passive", ( ( document.getElementById("ftp_passive_mode").checked )?1:0) );
        paramArray[ paramArray.length ] = new Parameter( "temporary", ( ( document.getElementById("ftp_temporary_mode").checked )?1:0) );

          paramArray[ paramArray.length ] = new Parameter( "qos", getQoS() );
      }
      else if( shownTemplateType == "http" || shownTemplateType == "https" )
      {
        if( !validateHTTP( shownTemplateType ) )
        {
          okBtn.disabled = false;
          return false;
        }
        paramArray[ paramArray.length ] = new Parameter( "upload_url", document.getElementById(shownTemplateType+"_url").value );
        paramArray[ paramArray.length ] = new Parameter( "login", document.getElementById( shownTemplateType+"_login" ).value );
        paramArray[ paramArray.length ] = new Parameter( "password", document.getElementById( shownTemplateType+"_password"  ).value );

        if( document.getElementById( shownTemplateType+"_proxySet").checked )
        {
          paramArray[ paramArray.length ] = new Parameter( "proxy_host", document.getElementById( shownTemplateType+"_proxyHost").value );
          paramArray[ paramArray.length ] = new Parameter( "proxy_port", document.getElementById( shownTemplateType+"_proxyPort").value );
          paramArray[ paramArray.length ] = new Parameter( "proxy_login", document.getElementById( shownTemplateType+"_proxyLogin").value );
          paramArray[ paramArray.length ] = new Parameter( "proxy_password", document.getElementById( shownTemplateType+"_proxyPassword").value );
        }
        else
        {
          paramArray[ paramArray.length ] = new Parameter( "proxy_host", "" );
          paramArray[ paramArray.length ] = new Parameter( "proxy_port", "" );
          paramArray[ paramArray.length ] = new Parameter( "proxy_login", "" );
          paramArray[ paramArray.length ] = new Parameter( "proxy_password", "" );
        }

        if( shownTemplateType == "https" )
        {
          paramArray[ paramArray.length ] = new Parameter( "validate_server_cert", ( ( document.getElementById("https_validate_server_cert").checked )?1:0) );
        }
          paramArray[ paramArray.length ] = new Parameter( "qos", getQoS() );
      }
      else if( shownTemplateType == "smtp" )
      {
        if( !validateSMTP() )
        {
          okBtn.disabled = false;
          return false;
        }

        var smtp_provider = document.getElementById("smtp_providers").value;
        var login = document.getElementById("smtp_login").value;
        var password = document.getElementById("smtp_password").value;
        var is_pop = document.getElementById("smtp_auth_pop").checked;
        var encryption = document.getElementById("smtp_encryption").value;
        var is_validate_cert = document.getElementById("smtp_validateServerCert").checked;
        paramArray[ paramArray.length ] = new Parameter( "email_to", document.getElementById("smtp_email_to").value );
        paramArray[ paramArray.length ] = new Parameter( "email_from", ( smtp_provider == "user" ? document.getElementById("smtp_email_from").value : login ) );
        paramArray[ paramArray.length ] = new Parameter( "host", document.getElementById("smtp_host").value );
        paramArray[ paramArray.length ] = new Parameter( "port", document.getElementById("smtp_port").value );
        paramArray[ paramArray.length ] = new Parameter( "login", login );
        paramArray[ paramArray.length ] = new Parameter( "password", password );
        paramArray[ paramArray.length ] = new Parameter( "pop_host", (is_pop ? document.getElementById("smtp_pop_host").value : "") );
        paramArray[ paramArray.length ] = new Parameter( "pop_port", (is_pop ? global_pop_port : "") );
        paramArray[ paramArray.length ] = new Parameter( "pop_login", (is_pop ? login : "") );
        paramArray[ paramArray.length ] = new Parameter( "pop_password", (is_pop ? password : "") );
        paramArray[ paramArray.length ] = new Parameter( "encryption", encryption );
        paramArray[ paramArray.length ] = new Parameter( "validate_server_cert", ( encryption != "none" && is_validate_cert ? 1:0) );
          paramArray[ paramArray.length ] = new Parameter( "qos", getQoS() );
      }
      else if( shownTemplateType == "tcp" )
      {
        if( !validateTCP() )
        {
          okBtn.disabled = false;
          return false;
        }
        paramArray[ paramArray.length ] = new Parameter( "host", document.getElementById("tcp_host").value );
        paramArray[ paramArray.length ] = new Parameter( "port", document.getElementById("tcp_port").value );
          paramArray[ paramArray.length ] = new Parameter( "qos", getQoS() );
      }
      else if( shownTemplateType == "networkshare" )
      {
        if( !validateNetworkShare() )
        {
          okBtn.disabled = false;
          return false;
        }

        var shareId = "";
        var paramStr = "schemaversion=1.0";

        var address = escape( document.getElementById("networkshare_host").value );
        var shareName = escape( document.getElementById("networkshare_share").value );
        var username = escape( document.getElementById("networkshare_login").value );
        var password = escape( document.getElementById("networkshare_password").value );
        var now = new Date();
        var timestamp = now.getTime();
        var url;

        var niceName = getNewShareNiceName();

        paramStr += "&nicename="+niceName+"&address="+address+"&share="+shareName+"&user="+username+"&pass="+password;
        url = "/axis-cgi/disks/networkshare/add.cgi?"+paramStr+"&timestamp="+timestamp;

        if(paramStr != "schemaversion=1.0")
        {
          var listXml = sendAction(url);

          if( listXml )
          {
            if( listXml.selectSingleNode("//ErrorDescription") )
            {
              alert( langObjEventsRecipSet.getText("noMailserversConfirm")+"\n"+listXml.selectSingleNode("//ErrorDescription").childNodes[0].nodeValue);
              return;
            }
            else
            {
              var node = listXml.selectSingleNode("//AddSuccess");
              shareId = node.getAttribute("ShareId");
            }
          }
          else
            alert( langObjEventsRecipSet.getText("noMailserversConfirm") );
        }

        paramArray[ paramArray.length ] = new Parameter( "share_id", shareId );
        paramArray[ paramArray.length ] = new Parameter( "upload_path", document.getElementById("networkshare_upload_path").value );
          paramArray[ paramArray.length ] = new Parameter( "qos", getQoS() );
      }

      obj.Parameters = paramArray;

      var soapParamObj = new SOAPClientParameters();
      soapParamObj.add("NewRecipientConfiguration", obj);

      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();

      var url = "/vapix/services"+timestamp;
      var method = "aa:AddRecipientConfiguration";
      SOAPClient.invoke( wsdlUrl, url, actionNameSpaces, method, soapParamObj, true, onSaveRecipient );

    }
  }

    function getQoS()
    {
      var f = document.getElementById("qosForm");
      for( var i = 0; i < f.children.length; i++ )
      {
        if( f.children[i].value == "AxisEventAlarm" )
        {
          var qosClass = f.children[i].name.replace("root_Network_QoS_Class", "").replace("_Desc", "");
          return document.getElementsByName("root_Network_QoS_Class" + qosClass + "_DSCP")[0].value;
        }
      }
      return "0";
    }

  function getShare(shareId)
  {  
    var xmlNode;
    var now = new Date();
    var timestamp = now.getTime();
    var url = "/axis-cgi/disks/networkshare/list.cgi?schemaversion=1.0&shareid="+shareId+"&timestamp="+timestamp;

    var listXml = sendAction(url);

    if(listXml)
      xmlNode = listXml.selectSingleNode("//NetworkShare");

    return xmlNode;
  }

  function getNewShareNiceName()
  {
    var shareName = "";
    var xmlNodes;
    var now = new Date();
    var timestamp = now.getTime();
    var url = "/axis-cgi/disks/networkshare/list.cgi?schemaversion=1.0&shareid=all&timestamp="+timestamp;

    listXml = sendAction(url);

    if( listXml )
    {
      var xmlNodes = listXml.selectNodes("//NetworkShare");

      if(xmlNodes)
      {
        var arrNum = new Array();
        for(var i = 0; i <= xmlNodes.length; i++)
          arrNum[i] = true;

        for(var i=0; i < xmlNodes.length; i++)
        {
          if( xmlNodes[i].getAttribute("NiceName").indexOf("recipientStorage-") != -1 )
          {
            arrNum[xmlNodes[i].getAttribute("NiceName").replace("recipientStorage-", "")] = false;
          }
        }

        for(var i=0; i < arrNum.length; i++)
        {
          if(arrNum[i])
          {
            shareName = "recipientStorage-"+i;
            break;
          }
        }
      }
      else
      {
        xmlNode = listXml.selectSingleNode("//NetworkShares");

        if(xmlNode)
          shareName = "recipientStorage-"+xmlNode.getAttribute("NumberOfShares");
      }
    }

    return shareName;
  }

  function showErrorMsg( msg, focusOn )
  {
    alert( msg );
    if( focusOn )
    {
      focusOn.focus();
      focusOn.select();
    }
  }
  function Parameter( name, value )
  {
    name = name.setIsAttribute( true );
    this.Name = name;

    value = value.setIsAttribute( true );
    this.Value = value;

    return this;
  }
  var newRecipientId = "";
  function onSaveRecipient( responseObj )
  {
    if( responseObj )
    {
      if( responseObj.name == "Error" )
      {
        var errorMsg = ( ( responseObj.description )?responseObj.description:(responseObj.fileName)?responseObj.fileName:responseObj.message );
        alert( errorMsg );

        document.getElementById( "btnOK" ).disabled = false;
        return;
      }
      else
      {
        newRecipientId = responseObj.ConfigurationID;
      }
    }//if response

    finishSave();
  }

  function finishSave()
  {
    document.getElementById( "btnOK" ).disabled = false;
    try
    {
      window.opener.recipientReloadList( newRecipientId );
    }
    catch( e )
    {
    }

    window.close();
  }


  function validateFTP()
  {
    var hostEl = document.getElementById( "ftp_host");
    var host = ( hostEl.value ).trim();

    if( host == "" || !checkValidAddress( host ) )
    {
      showErrorMsg( langObjEventsRecipSet.getText("illNetAdrAlert"), hostEl );
      return false;
    }

      <!--#if expr="$IPv6_Enabled != yes" -->
      if( valid_v6( host ) )
      {
        alert( langObjEventsRecipSet.getText("addrIPv6Alert") );
      }
      <!--#endif -->

    var portEl = document.getElementById("ftp_port");
    if( IntegerCheck(portEl.value,1,65535) == 0 )
    {
      showErrorMsg( langObjEventsRecipSet.getText("proxyPortAlert"), portEl );
      return false;
    }

    var uploadEl = document.getElementById("ftp_upload_path");
    if( uploadEl.value.indexOf(" ") != -1 )
    {
      showErrorMsg( langObjEventsRecipSet.getText("ftpUplPathAlert"), uploadEl );
      return false;
    }

    var loginEl = document.getElementById( "ftp_login");
    var pwdEl = document.getElementById( "ftp_password");
    if( loginEl.value == "" && pwdEl.value != "" )
    {
      showErrorMsg( langObjEventsRecipSet.getText("speUseAlert"), loginEl );
      return false;
    }
    return true;
  }

  function validateHTTP( shownTemplateType )
  {
    var urlEl = document.getElementById( shownTemplateType+"_url" );
    var tmpUrl = ( urlEl.value ).toLowerCase();
    if( shownTemplateType == "http" )
    {
      if( tmpUrl.indexOf("http://") != 0 )
      {
        showErrorMsg( langObjEventsRecipSet.getText("urlStaAlert"), urlEl );
        return false;
      }
    }
    else if( tmpUrl.indexOf("https://") != 0 )
    {
      showErrorMsg( langObjEventsRecipSet.getText("urlStaHttpsAlert"), urlEl );
      return false;
    }

    if( !validateHTTPAddress( shownTemplateType, urlEl, tmpUrl ) )
    {
      return false;
    }

    var loginEl = document.getElementById( shownTemplateType+"_login");
    var pwdEl = document.getElementById( shownTemplateType+"_password");
    if( loginEl.value == "" && pwdEl.value != "" )
    {
      showErrorMsg( langObjEventsRecipSet.getText("speUseAlert"), loginEl );
      return false;
    }

    if( loginEl.value != "" && pwdEl.value == "" )
    {
      showErrorMsg( langObjEventsRecipSet.getText("spePswAlert"), pwdEl );
      return false;
    }

    if( document.getElementById( shownTemplateType+"_proxySet").checked )
    {
      var proxyHostEl = document.getElementById( shownTemplateType+"_proxyHost");
      var proxyHost = ( proxyHostEl.value ).trim();

      if( proxyHost == "" || !checkValidAddress( proxyHost ) )
      {
        showErrorMsg( langObjEventsRecipSet.getText("illNetAdrAlert"), proxyHostEl );
        return false;
      }

      var proxyPortEl = document.getElementById(shownTemplateType+"_proxyPort");
      var proxyPort = ( proxyPortEl.value ).trim();
      if( proxyPort != "" && IntegerCheck(proxyPortEl.value,1,65535) == 0 )
      {
        showErrorMsg( langObjEventsRecipSet.getText("proxyPortAlert"), proxyPortEl  );
        return false;
      }

      var proxyLoginEl = document.getElementById(shownTemplateType+"_proxyLogin");
      var proxyPwdEl = document.getElementById(shownTemplateType+"_proxyPassword");
      if( proxyLoginEl.value == "" && proxyPwdEl.value != "" )
      {
        showErrorMsg( langObjEventsRecipSet.getText("speUseAlert"), proxyLoginEl);
        return false;
      }

      if( proxyLoginEl.value != "" && proxyPwdEl.value == "" )
      {
        showErrorMsg( langObjEventsRecipSet.getText("spePswAlert"), proxyPwdEl );
        return false;
      }
    }

    return true;
  }

  function validateHTTPAddress( type, urlEl, tmpURL )
  {
    var tmpAddr = tmpURL.substr(type.length+3);
    var tmpPath = "";
    if (tmpAddr.indexOf("/") > 0)
    {
      tmpAddr = tmpAddr.substr(0,tmpAddr.indexOf("/"));
      tmpPath = tmpURL.substr(7+tmpAddr.indexOf("/"))
    }

      var ipv6_pos1 = tmpAddr.indexOf("[");
      var ipv6_pos2 = tmpAddr.indexOf("]");
      <!--#if expr="$IPv6_Enabled = yes" -->
        if (ipv6_pos1 >= 0 && ipv6_pos2 >= 0) {
          if (tmpAddr.charAt(ipv6_pos2+1) == ":") {
            var port = tmpAddr.substring(ipv6_pos2+2);
            if (IntegerCheck(port,1,65535) == 0) {
              showErrorMsg( langObjEventsRecipSet.getText("invalPortNbrAlert"), urlEl );
              return false;
            }
          }
          tmpAddr = tmpAddr.substring(ipv6_pos1+1,ipv6_pos2-1);
        } else {
          var startOfPort = tmpAddr.indexOf(":");
          if (startOfPort >= 0) {
            var port = tmpAddr.substring(startOfPort+1); 
            tmpAddr = tmpAddr.substring(0, startOfPort);
            if (IntegerCheck(port,1,65535) == 0) {
              showErrorMsg( langObjEventsRecipSet.getText("invalURLAlert"), urlEl );
              return false;
            }
          }
        }

        if (ipv6_pos1 >= 0 && ipv6_pos2 < 0 || ipv6_pos1 < 0 && ipv6_pos2 >= 0 || tmpPath.indexOf("\"") >= 0 || checkValidAddress(tmpAddr) == false) {
      <!--#else -->
        if (ipv6_pos1 == 0 && ipv6_pos2 > ipv6_pos1 && valid_v6(tmpAddr.substring(ipv6_pos1+1, ipv6_pos2))) {
          alert( langObjEventsRecipSet.getText("addrIPv6Alert") );
        } else {
    var startOfPort = tmpAddr.indexOf(":");
    if (startOfPort >= 0) {
      var port = tmpAddr.substring(startOfPort+1); 
      tmpAddr = tmpAddr.substring(0, startOfPort);
      if (IntegerCheck(port,1,65535) == 0) {
        showErrorMsg( langObjEventsRecipSet.getText("invalPortNbrAlert"), urlEl );
        return false;
      }
    }
    if (tmpPath.indexOf("\"") >= 0 || !checkValidAddress(tmpAddr)) {
        <!--#endif -->
      showErrorMsg( langObjEventsRecipSet.getText("invalURLAlert"), urlEl );
      return false;
    }
      <!--#if expr="$IPv6_Enabled != yes" -->
        }
      <!--#endif -->
    return true;
  }

  function validateSMTP()
  {
    var emailToEl = document.getElementById( "smtp_email_to" );
    var addressArr = ( emailToEl.value ).split( /[\,;]+/); 
    var n = addressArr.length;
    var addressStr, i;

    for ( i = 0; i < n; i++ )
    {
      addressStr = ( addressArr[i] ).trim();
      if( addressStr == "" )
      {
          showErrorMsg( langObjEventsRecipSet.getText("speEmailAlert"), emailToEl );
          return false;
      }
      else if( !is_valid_email( addressStr ) )
      {
        if( !confirm( langObjEventsRecipSet.getText("invalidEmailAlert") ) )
        {
          emailToEl.focus();
          emailToEl.select();
          return false;
        }
      }
    }
    
    var loginEl = document.getElementById( "smtp_login" );
    var login = ( loginEl.value ).trim();

    var passwordEl = document.getElementById( "smtp_password" );
    var password = passwordEl.value;
    
    var smtp_providers_el = document.getElementById( "smtp_providers" );
    var smtp_providers_index = smtp_providers_el.selectedIndex;
    if( smtp_providers_index <= 0 )
    {
      showErrorMsg( langObjEventsRecipSet.getText("chPrDefProvUsrAlrt") );
      return false;
    }

    var smtp_provider = smtp_providers_el.options[smtp_providers_index].value;
    if( smtp_provider != "user" && ( login.length <= 0 || password.length <= 0 ) )
    {
      showErrorMsg( langObjEventsRecipSet.getText("usrIdPassReqAlrt") );
      return false;
    }

    var emailFromEl = document.getElementById( "smtp_email_from" );
    var addressStr = ( emailFromEl.value ).trim();
    if( smtp_provider == "user" && addressStr.length > 0 && !is_valid_email( addressStr ) )
    {
      if( !confirm( langObjEventsRecipSet.getText("invalidEmailAlert") ) )
      {
        emailFromEl.focus();
        emailFromEl.select();
        return false;
      }
    }


    var servUrlEl = document.getElementById( "smtp_host" );
    var servUrl = ( servUrlEl.value ).trim();
    if( servUrl == "" || !checkValidAddress( servUrl ) )
    {
      showErrorMsg( langObjEventsRecipSet.getText("illegalSMTPAlrt"), servUrlEl );
      return false;
    }
    
    var portEl = document.getElementById( "smtp_port" );
    if( IntegerCheck(portEl.value,1,65535 ) == 0 )
    {
      showErrorMsg( langObjEventsRecipSet.getText("invalPrtAlrt"), portEl );
      return false;
    }

    if( document.getElementById( "smtp_auth_pop" ).checked )
    {
      var popUrlEl = document.getElementById( "smtp_pop_host" );
      var popUrl = ( popUrlEl.value ).trim();
      
      if( popUrl == "" || !checkValidAddress( popUrl ) )
      {
        showErrorMsg( langObjEventsRecipSet.getText("illegalPOP3Alrt"), popUrlEl );
        return false;
      }
    }

    return true;
  }

  function validateTCP()
  {
    var hostEl = document.getElementById( "tcp_host" );
    var host = ( hostEl.value ).trim();

    if( host == "" || !checkValidAddress( host ) )
    {
      showErrorMsg( langObjEventsRecipSet.getText("illNetAdrAlert"), hostEl );
      return false;
    }
      <!--#if expr="$IPv6_Enabled != yes" -->
      if( valid_v6( host ) )
      {
        alert( langObjEventsRecipSet.getText("addrIPv6Alert") );
      }
      <!--#endif -->

    var portEl = document.getElementById( "tcp_port" );
    if( IntegerCheck(portEl.value,1,65535 ) == 0 )
    {
      showErrorMsg( langObjEventsRecipSet.getText("proxyPortAlert"), portEl );
      return false;
    }
    return true;
  }

  function validateNetworkShare()
  {
    var hostEl = document.getElementById("networkshare_host");
    var shareEl = document.getElementById("networkshare_share");
    var reqElArr = new Array(hostEl, shareEl);

    for(var i=0; i < reqElArr.length; i++)
    {
      if(reqElArr[i].value == "")
      {
        reqElArr[i].focus();
        reqElArr[i].select();
        alert( langObjEventsRecipSet.getText("missReqParamAlert") );
        return false;
      }
    }

    if(!checkValidAddress(hostEl.value) )
    {
      hostEl.focus();
      hostEl.select();
      alert( langObjEventsRecipSet.getText("illegalHostAlert") );
      return false;
    }

    return true;
  }

  var serverStatus = AxisConnectionFactory.createAjaxConnection();
  var requestEnabled = true;
  var t;
  var delayWaitTimer;
  var testConnection_url;
  var testType;
  function testConnection( justTestLength )
  {
    if( shownTemplateType == "" )
    { 
      return false;
    }
    var url = "/axis-cgi/operator/";
    var params = "";
    testType = shownTemplateType;
    if( shownTemplateType == "ftp" )
    {
      if( !justTestLength && !validateFTP() )
      {
        return false;
      }
      url += "ftptest.cgi";

      params = "?address=" + escape( document.getElementById( "ftp_host" ).value );
      params += "&username="   + escape(document.getElementById( "ftp_login" ).value);
      params += "&password="   + escape(document.getElementById( "ftp_password" ).value);
      params += "&uploadpath=" + escape(document.getElementById( "ftp_upload_path" ).value);
      params += "&portnbr="    + escape(document.getElementById( "ftp_port" ).value);
      params += "&passive="    + escape((document.getElementById( "ftp_passive_mode" ).checked )?"yes":"no");
      params += "&temporary="    + escape((document.getElementById( "ftp_temporary_mode" ).checked )?"yes":"no");
    }
    else if( shownTemplateType == "http" || shownTemplateType == "https" )
    {
      if( !justTestLength && !validateHTTP( shownTemplateType ) )
      {
        return false;
      }
      url += "httptest.cgi";

      params = "?address="    + escape(document.getElementById(shownTemplateType+"_url").value);
      params += "&username="  + escape(document.getElementById( shownTemplateType+"_login" ).value);
      params += "&password="  + escape(document.getElementById( shownTemplateType+"_password"  ).value);

      if( document.getElementById( shownTemplateType+"_proxySet").checked )
      {
        params += "&proxyaddress="  + escape( document.getElementById( shownTemplateType+"_proxyHost").value );
        params += "&proxyport="     + escape(document.getElementById( shownTemplateType+"_proxyPort").value);
        params += "&proxylogin="    + escape(document.getElementById( shownTemplateType+"_proxyLogin").value);
        params += "&proxypassword=" + escape(document.getElementById( shownTemplateType+"_proxyPassword").value);
      }
      else
      {
        params += "&proxyaddress=&proxyport=&proxylogin=&proxypassword=";
      }

      if( shownTemplateType == "https" )
      {
        params += "&validatecert=" + ( document.getElementById("https_validate_server_cert").checked ?"1":"0" );
      }
    }
    else if( shownTemplateType == "smtp" )
    {
      if( !justTestLength && !validateSMTP() )
      {
        return false;
      }

      url = "/axis-cgi/smtptest.cgi";
      var mailProvider = document.getElementById("smtp_providers").value;
      var login = document.getElementById("smtp_login").value;
      var email_from = document.getElementById("smtp_email_from").value
      email_from = (mailProvider == "user" ? email_from : login);
      
      params = "?to=" + document.getElementById("smtp_email_to").value;
      params += "&from=" + email_from;
      params += "&mailserver="+document.getElementById("smtp_host").value;
      params += "&port=" + document.getElementById("smtp_port").value;
      params += "&user=" + login;
      params += "&pass=" + document.getElementById("smtp_password").value;
      if( document.getElementById("smtp_auth_pop").checked )
      {
        params += "&popserver=" + document.getElementById("smtp_pop_host").value;
        params += "&popport=" + global_pop_port;
        params += "&popuser=" + document.getElementById("smtp_login").value;
        params += "&poppass=" + document.getElementById("smtp_password").value;
      }
      var encryption = document.getElementById("smtp_encryption").value;
      params += "&encryption=" + encryption;
      var validatecert = ( document.getElementById("smtp_validateServerCert").checked )?"1":"0";
      params += "&validatecert=" + validatecert;
      params += "&subject=" + langObjEventsRecipSet.getText("smtpTestSubject");

      var hostname = location.hostname;
      var bodyTxt = langObjEventsRecipSet.getText("smtpTestBody_noBonjour");
      bodyTxt = bodyTxt.replace( "#HOSTNAME#", hostname );
      params += "&body=" + encodeURIComponent(bodyTxt);
    }
    else if( shownTemplateType == "tcp" )
    {
      if( !justTestLength && !validateTCP() )
      {
        return false;
      }
      url += "tcptest.cgi";

      params = "?address=" + escape( document.getElementById("tcp_host").value );
      params += "&port="       + escape( document.getElementById("tcp_port").value );
    }
    else if( shownTemplateType == "networkshare" )
    {
      if( !justTestLength && !validateNetworkShare() )
      {
        return false;
      }
      url = "/axis-cgi/disks/networkshare/test.cgi?schemaversion=1.0";

      var host = escape( document.getElementById("networkshare_host").value );
      var share = escape( document.getElementById("networkshare_share").value );
      var username = escape( document.getElementById("networkshare_login").value );
      var password = escape( document.getElementById("networkshare_password").value );

      params = "&address=" + host;
      params += "&share="  + share;

      if(username != "")
        params += "&user="+ username;

    <!--#if expr="$doAction = view" -->
      params += "&shareid=<!--#echo var="share_id" option="encoding:url" -->";
    <!--#else -->
      if(password != "")
        params += "&pass="+ password;
    <!--#endif -->
    }

    if( params.length >= 1760 )
    {
      alert( langObjEventsRecipSet.getText("numOfCharAlert") );
      return false;
    }
    else if( justTestLength )
    {
      return true;
    }
    else
    {
      var now = new Date();
      var timestamp = now.getTime();
      var type = testType.toUpperCase();

      if(shownTemplateType == "networkshare")
        type = "Network Share";

      addWaitWindow(type);
      testConnection_url = url + params + "&timestamp=" + timestamp;
      startTest(testConnection_url);
    }
  }

  function addWaitWindow(type)
  {
    var processMsg = "Testing "+type+".<br>Please wait...";
    wait_disableInput();
    wait_init( processMsg, 100, 300 );
    delayWaitTimer = window.setTimeout( 'wait_start( "'+processMsg+'", 100, 300 )', 400 );
  }
  
  function removeWaitWindow()
  {
    wait_stop();
    wait_enableInput();

    if( delayWaitTimer )
    {
      window.clearTimeout( delayWaitTimer );
    }
  }

  function startTest(url)
  {
    if( shownTemplateType == "networkshare" )
    {
      var listXml = sendAction(url);

      if(listXml)
      {
        var node = listXml.selectSingleNode("//TestSuccess");
        var jobId = node.getAttribute("JobId");

        manageNetworkShareProgress(jobId);
      }
      else
      {
        removeWaitWindow();
        alert( langObjEventsRecipSet.getText("conFaAlert")+xml.selectSingleNode("//ErrorDescription").childNodes[0].nodeValue);
      }
    }
    else
    {
      requestEnabled = true;
      t = setTimeout(testTimeout, 50000);
      AxisConnectionFactory.sendAsync(["GET", url], "", showServerStatus, serverStatus);
    }
  }

  var progressTimer = null;
  function manageNetworkShareProgress(jobId, percent, msg)
  {
    if( progressTimer )
    {
      window.clearTimeout( progressTimer );
    }

    if( !percent || (percent && percent != 100) )
    {
      progressTimer = window.setTimeout( 'getNetworkShareProgress( \''+jobId+'\' )', 1000 );
    }
    else
    {
      removeWaitWindow();

      if(msg)
        alert( langObjEventsRecipSet.getText("conFaAlert")+msg);
      else
        alert( langObjEventsRecipSet.getText("conSuAlert") );
    }
  }


  function getNetworkShareProgress( jobId )
  {
    var now = new Date();
    var timestamp = now.getTime();
    var percentage = 100;
    var msg = "";

    url = "/axis-cgi/disks/networkshare/job.cgi?schemaversion=1.0&jobid="+jobId+"&timestamp="+timestamp;

    var listXml = sendAction(url);

    if(listXml)
    {
      if( listXml.selectSingleNode("//ErrorDescription") == null )
      {
        var node = listXml.selectSingleNode("//Progress");
        if(node != null)
          percentage = node.childNodes[0].nodeValue;
      }
      else
        msg = listXml.selectSingleNode("//ErrorDescription").childNodes[0].nodeValue;
    }

    if(msg != "")
      manageNetworkShareProgress(jobId, percentage, msg);
    else
      manageNetworkShareProgress(jobId, percentage);
  }

  function testTimeout()
  {
    clearTimeout( t );
    requestEnabled = false;
    alert( langObjEventsRecipSet.getText("tesTimAlert") );
    removeWaitWindow();
  }

  function showServerStatus()
  {
    if( requestEnabled )
    {
      if( serverStatus.getReadyState() == 4 )
      {
        clearTimeout( t );
        removeWaitWindow();
        
        var statusText = serverStatus.getResponseText();
        if( statusText )
        {
          statusText = statusText.trim();
          statusText = statusText.replace(/\\n/g, "\n");
        }
        if( serverStatus.getStatus() == 200 )
        {
          if( statusText.indexOf("Error") != -1 || statusText.indexOf("Fail") != -1 || ( statusText != "Test successful." && testType == "smtp" ))
          {
            if( statusText.indexOf("Internal Server Error") != -1 )
            {
              statusText = statusText.slice( statusText.indexOf("Internal Server Error")+21 );
            }
            statusText = "\n\n" + getTranslatedStatusText(statusText);
            if( testType == "tcp" )
            {
              alert( langObjEventsRecipSet.getText("conFaAlert")+" "+ statusText );
            }
            else if( testType == "smtp" )
            {
              alert( langObjEventsRecipSet.getText("sendFaAlert")+" "+ statusText );
            }
            else
            {
              alert( langObjEventsRecipSet.getText("uplFaAlert")+" "+ statusText );
            }
          }
          else
          {
            if( testType == "tcp" )
            {
              alert( langObjEventsRecipSet.getText("conSuAlert") );
            }
            else if( testType == "smtp" )
            {
              alert( langObjEventsRecipSet.getText("sendSuAlert") );
            }
            else
            {
              alert( langObjEventsRecipSet.getText("uplSuAlert") );
            }
          }
        } 
        else 
        {
          if( statusText.indexOf("Internal Server Error") != -1 )
          {
            statusText = statusText.slice( statusText.indexOf("Internal Server Error")+21 );
          }
          statusText = "\n\n" + getTranslatedStatusText(statusText);
          if( testType == "tcp" )
          {
            alert( langObjEventsRecipSet.getText("conFaAlert")+" "+ statusText );
          }
          else if( testType == "smtp" )
          {
            alert( langObjEventsRecipSet.getText("sendFaAlert")+" "+ statusText );
          }
          else
          {
            alert( langObjEventsRecipSet.getText("uplFaAlert")+" "+ statusText );
          }
        }
        requestEnabled = true;
      }
    }
  }

  function smtp_email_from_update()
  {
    var providers_el = document.getElementById( "smtp_providers" );
    var provider = providers_el.options[providers_el.selectedIndex].value;
    var email_from_el = document.getElementById( "smtp_email_from" );
    var login = document.getElementById("smtp_login").value;

    if( !(provider == "" || provider == "user" && login == "") )
    {
      email_from_el.value = login;
    }
  }

  function getTranslatedStatusText(txt)
  {
    for( var i = 0; i < statusErrorArr.length; i++ )
    {
      if( txt.indexOf( statusErrorArr[i].text ) >= 0 )
      {
        return txt = statusErrorArr[i].translation;
      }
    }
    return txt;
  }
// -->
</script>
