  <script  language="javascript" type="text/javascript">
    <!--
    var langObjSchSchSet;
    
    var eventNameSpaces = new SOAPClientNS();
    eventNameSpaces.add("aev", "http://www.axis.com/vapix/ws/event1" );
    eventNameSpaces.add("tns1", "http://www.onvif.org/ver10/topics" );
    eventNameSpaces.add("tnsaxis", "http://www.axis.com/2009/event/topics" );
    eventNameSpaces.add("wsnt", "http://docs.oasis-open.org/wsn/b-2" );
  
    var wsdlUrl = "/wsdl/vapix/EventService.wsdl";

    var visibleSchType = "daily";
    function onInit()
    {
      langObjSchSchSet = new Language("incl_schedules", "schedule_setup");
      langObjSchSchSet.init(false, true);
      getScheduleNameList();
      <!--#if expr="$doAction = modify" -->
        var selectedScheType = setFields();
        var selectEl = document.getElementById("type");
        setSelectedOption( selectEl, selectedScheType );
        toggleSchType( selectEl );
      <!--#elif expr="$scheduleType != Pulse" -->
        renderDayOptions( document.getElementById("monthly_start_day"), 1 );
        renderDayOptions( document.getElementById("monthly_end_day"), 31 );
        renderDayOptions( document.getElementById("yearly_start_day"), 1 );
        renderDayOptions( document.getElementById("yearly_end_day"), 31 );
      <!--#endif -->
    }
    addLoadEvent( onInit );
    
    var scheduleNames = new Array();
    function getScheduleNameList()
    {
      scheduleNames = new Array();

      var params = new SOAPClientParameters();
    
      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();
  
      var params = new SOAPClientParameters();
      var scheduleFilter = { "ScheduleType":"Interval" };
      params.add("ScheduleFilter", scheduleFilter );
      
      var url = "/vapix/services"+timestamp;
      var method = "aev:GetScheduledEvents";
    
      SOAPClient.invoke( wsdlUrl, url, eventNameSpaces, method, params, false, loadScheduleNameList );
    }
  
    function loadScheduleNameList( responseObj )
    {
      if( responseObj )
      {
        var scheduledParent = responseObj.ScheduledEvents;
        if( scheduledParent )
        {
          var scheduleArr = scheduledParent.ScheduledEvent;
          if( scheduleArr )
          {
            if( scheduleArr.constructor != Array )
            {
              scheduleArr = new Array( scheduleArr );
            }
            var len = scheduleArr.length;

            for( var i = 0; i < len; i++ )
            {
              if( scheduleArr[i].Name )
              {
                <!--#if expr="$doAction = modify" -->
                  if( scheduleArr[i].EventID != "<!--#echo var="eventId" option="encoding:javascript" -->" )
                  {
                    scheduleNames[ scheduleArr[i].Name ] = scheduleArr[i].Name;
                  }
                  else
                  {
                    modifiedSchedule = scheduleArr[i];
                  }
                <!--#else -->
                  scheduleNames[ scheduleArr[i].Name ] = scheduleArr[i].Name;
                <!--#endif -->
              }
            }
          }
        }
      }//if response
    }

    <!--#if expr="$doAction = modify" -->
      var modifiedSchedule;
      function setFields()
      {
        var selectedSchType = "daily";

        document.getElementById("name").value = modifiedSchedule.Name;
        var schedule = modifiedSchedule.Schedule.ICalendar;
        schedule = schedule.replace(/\\n/g, "\n");
        var monthlyStartDay = 1;
        var monthlyEndDay = 31;
        var yearlyStartDay = 1;
        var yearlyEndDay = 31;
        var tmpArr = schedule.split("\n");
        var len = tmpArr.length;
        var rrule, dtstart, dtend, tmpStr;
        for( var i = 0; i < len; i++ )
        {
          tmpStr = tmpArr[i];
          if( tmpStr.indexOf("DTSTART:") != -1 )
          {
            dtstart = tmpStr.replace("DTSTART:", "");
          }
          else if( tmpStr.indexOf("DTEND:") != -1 )
          {
            dtend = tmpStr.replace("DTEND:", "");
          }
          else if( tmpStr.indexOf("RRULE:") != -1 )
          {
            rrule = tmpStr.replace("RRULE:", "");
          }
        }
        if( rrule == "FREQ=YEARLY" )
        {
          selectedSchType = "yearly";

          var startMonth = parseInt( dtstart.substring( 4, 6 ), 10 );
          setSelectedOption( document.getElementById("yearly_start_month"), startMonth );

          yearlyStartDay = parseInt( dtstart.substring( 6, 8 ), 10 );

          var endMonth = parseInt( dtend.substring( 4, 6 ), 10 );
          setSelectedOption( document.getElementById("yearly_end_month"), endMonth );

          yearlyEndDay = parseInt( dtend.substring( 6, 8 ), 10 );

        }
        else if( rrule.indexOf("FREQ=YEARLY;BYMONTH=") != -1 )
        {
          selectedSchType = "monthly";

          monthlyStartDay = parseInt( dtstart.substring( 6, 8 ), 10 );
          monthlyEndDay = parseInt( dtend.substring( 6, 8 ), 10 );

          var monthsArr = ( rrule.replace("FREQ=YEARLY;BYMONTH=","") ).split(",");
          setCheckboxes( selectedSchType, monthsArr );
        }
        else if( rrule.indexOf("FREQ=MONTHLY;BYDAY=") != -1 || rrule == "FREQ=WEEKLY" )
        {
          selectedSchType = "weekly";
          var tmpStartDate = new Date( parseInt( dtstart.substring( 0, 4 ), 10 ), parseInt( dtstart.substring( 4, 6 ), 10 ) - 1,parseInt( dtstart.substring( 6, 8 ), 10 ) );
          var dayNumber = tmpStartDate.getDay();
          
          var tmpEndDate = new Date( parseInt( dtend.substring( 0, 4 ), 10 ), parseInt( dtend.substring( 4, 6 ), 10 ) - 1,parseInt( dtend.substring( 6, 8 ), 10 ) );
          var endDayNumber = tmpEndDate.getDay();

          setSelectedOption( document.getElementById("weekly_start_day"), dayNumber );
          setSelectedOption( document.getElementById("weekly_end_day"), endDayNumber );
        }
        else if( rrule.indexOf("FREQ=WEEKLY;BYDAY=") != -1 )
        {
          selectedSchType = "daily";

          var daysArr = ( rrule.replace("FREQ=WEEKLY;BYDAY=","") ).split(",");
          setCheckboxes( selectedSchType, daysArr );
        }

        document.getElementById(selectedSchType+"_start").value = getTimeStr( dtstart );
        document.getElementById(selectedSchType+"_end").value = getTimeStr( dtend );

        renderDayOptions( document.getElementById("monthly_start_day"), monthlyStartDay );
        renderDayOptions( document.getElementById("monthly_end_day"), monthlyEndDay );
        renderDayOptions( document.getElementById("yearly_start_day"), yearlyStartDay );
        renderDayOptions( document.getElementById("yearly_end_day"), yearlyEndDay );

        return selectedSchType;
      }

      function getTimeStr( str )
      {
        var timeStr = str.slice( str.indexOf("T")+1, -2 );
        timeStr = timeStr.substring(0,2)+":"+timeStr.substring(2);

        return timeStr;
      }

      function setCheckboxes( visibleSchType, valueArr )
      {
        var cnt = valueArr.length;
        var allCnt = 7;
        if( visibleSchType == "monthly" )
        {
          allCnt = 12;
        }
        if( cnt == allCnt )
        {
          toggleAll( visibleSchType );
        }
        else
        {
          var val;
          for( var i = 0; i < cnt; i++ )
          {
            val = valueArr[ i ];
            for( var j = i; j < allCnt; j++ )
            {
              if( document.getElementById( visibleSchType+"_"+j ).value == val )
              {
                document.getElementById( visibleSchType+"_"+j ).checked = true;
              }
            }
          }
        }
      }
    <!--#endif -->

    function renderDayOptions( selectEl, selectedValue )
    {
      clearSelect( selectEl );
      for(var i = 1; i <= 31; i++ )
      {
        addSelectOption( selectEl, i, i, ( ( i == selectedValue )?true:false ) );
      }
    }

    function toggleSchType( el )
    {
      var val = el.options[ el.selectedIndex ].value;
      var div = document.getElementById("div_"+val );
      if( div )
      {
        document.getElementById("div_"+visibleSchType ).style.display = "none";
        document.getElementById("div_"+val ).style.display = "block";
        visibleSchType = val;
      }
    }

    function toggleAll( val )
    {
      var box;
      var cnt = 7; //daily
      if( val == "monthly" )
      {
        cnt = 12;
      }
      for( var i = 0; i < cnt; i++ )
      {
        document.getElementById( val+"_"+i ).checked = true;
      }
    }

    function getCheckboxesValues( visibleSchType, addSuffixStr )
    {
      var valueArray = new Array();
      var cnt = 7;
      if( visibleSchType == "monthly" )
      {
        cnt = 12;
      }
      for( var i = 0; i < cnt; i++ )
      {
        if( document.getElementById( visibleSchType+"_"+i ).checked )
        {
          valueArray[ valueArray.length ] = document.getElementById( visibleSchType+"_"+i ).value+((addSuffixStr)?addSuffixStr:"");
        }
      }
      return valueArray;
    }

    function validateSchedule()
    {
      var nameEl = document.getElementById("name");
      var name = ( nameEl.value ).trim();
      if( name == "" )
      {
        showErrorMsg( langObjSchSchSet.getText("nameAlert"), nameEl );
        return false;
      }
      else if( scheduleNames[ name ] )
      {
        if( !confirm( langObjSchSchSet.getText("nameConfirm1")+" \""+name+"\".\n\n"+langObjSchSchSet.getText("nameConfirm2") ) )
        {
          nameEl.focus();
          nameEl.select();
          return false;
        }
      }

      var startTimeEl = document.getElementById(visibleSchType+"_start");
      var startTime = ( startTimeEl.value ).trim();
      if( !validateTime( startTime ) )
      {
        showErrorMsg( langObjSchSchSet.getText("startTimeAlert"), startTimeEl );
        return false;
      }

      var endTimeEl = document.getElementById(visibleSchType+"_end");
      var endTime = ( endTimeEl.value ).trim();
      if( !validateTime( endTime ) )
      {
        showErrorMsg( langObjSchSchSet.getText("endTimeAlert"), endTimeEl );
        return false;
      }

      if( visibleSchType != "yearly" && visibleSchType != "weekly" )
      {
        if( !hasBoxChecked( visibleSchType ) )
        {
          var firstBox = document.getElementById( visibleSchType+"_"+0 );
          if( visibleSchType == "daily" )
          {
            showErrorMsg( langObjSchSchSet.getText("dayAlert"), firstBox );
          }
          else //monthly
          {
            showErrorMsg( langObjSchSchSet.getText("monthAlert"), firstBox );
          }
          return false;
        }
      }
      else if( visibleSchType == "weekly" )
      {
        var startDay = document.getElementById("weekly_start_day").value;
        var endDay = document.getElementById("weekly_end_day").value;
        if( startDay == endDay && startTime == endTime )
        {
          showErrorMsg( langObjSchSchSet.getText("weeklyAlert"), startTimeEl );
          return false;
        }
      }
      return true;
    }

    function hasBoxChecked( schType )
    {
      var isChecked = false;
      var cnt = 7; //daily
      if( schType == "monthly" )
      {
        cnt = 12;
      }
      for( var i = 0; i < cnt && !isChecked; i++ )
      {
        isChecked = document.getElementById( schType+"_"+i ).checked;
      }
      return isChecked;
    }

    function validateTime( timeStr )
    {
      var timeRegEx = /^(([0-1]{1}[0-9]{1})|([2]{1}[0-3]{1}))(:[0-5]{1}[0-9]{1})/;
      return ( timeRegEx.test( timeStr ) );
    }

    function saveData()
    {
      document.getElementById( "btnOK" ).disabled = true;
      if( !validateSchedule() )
      {
        document.getElementById( "btnOK" ).disabled = false;
        return;
      }
    <!--#if expr="$doAction = modify" -->
      var params = new SOAPClientParameters();
      params.add("EventID", "<!--#echo var="eventId" option="encoding:javascript" -->" );

      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();

      var url = "/vapix/services"+timestamp;
      var method = "aev:RemoveScheduledEvent";
      SOAPClient.invoke( wsdlUrl, url, eventNameSpaces, method, params, true, onRemoveSchedule );
    <!--#else -->
      saveSchedule();
    <!--#endif -->
    }

    <!--#if expr="$doAction = modify" -->
      function onRemoveSchedule( responseObj )
      {
        if( responseObj )
        {
          if( responseObj.name == "Error" )
          {
            var errorMsg = ( ( responseObj.description )?responseObj.description:(responseObj.fileName)?responseObj.fileName:responseObj.message );
            alert( errorMsg );
            return;
          }
        }//if response
    
        saveSchedule();
      }
    <!--#endif -->

    var newScheduleName = "";
    var newScheduleId = "";
    function saveSchedule()
    {
      var obj = new Object();
      <!--#if expr="$doAction = modify" -->
        obj.EventID = "<!--#echo var="eventId" option="encoding:javascript" -->";
      <!--#endif -->
      obj.Name = document.getElementById("name").value;
      newScheduleName = obj.Name;

      var scheduleArr = new Array();
      if( visibleSchType == "daily" )
      {
        var startTime = document.getElementById("daily_start").value;
        startTime = startTime.replace(":", "");

        scheduleArr[scheduleArr.length] = "DTSTART:19700101T"+startTime+"00";

        var endTime = document.getElementById("daily_end").value;
        endTime = endTime.replace(":", "");

        if( startTime >= endTime )
        {
          scheduleArr[scheduleArr.length] = "DTEND:19700102T"+endTime+"00";
        }
        else
        {
          scheduleArr[scheduleArr.length] = "DTEND:19700101T"+endTime+"00";
        }
        var daysArr = getCheckboxesValues( visibleSchType );
        scheduleArr[scheduleArr.length] = "RRULE:FREQ=WEEKLY;BYDAY="+daysArr.join(',');
      }
      else if( visibleSchType == "weekly" )
      {
        //first sunday
        var startDay = parseInt( document.getElementById("weekly_start_day").value, 10 ) + 4;
        var startTime = document.getElementById("weekly_start").value;
        startTime = startTime.replace(":", "");

        var endDay = parseInt( document.getElementById("weekly_end_day").value, 10 ) + 4;
        var endTime = document.getElementById("weekly_end").value;
        endTime = endTime.replace(":", "");

        if( startDay > 7 )
        {
          startDay -= 7;
        }

        if( endDay - startDay < 0 )
        {
          endDay += 7;
        }
        else if( endDay - startDay > 7 )
        {
          endDay -= 7;
        }
        else if( endDay - startDay == 7 && startTime < endTime )
        {
          endDay = startDay;
        }

        scheduleArr[scheduleArr.length] = "DTSTART:1970010"+startDay+"T"+startTime+"00";
        scheduleArr[scheduleArr.length] = "DTEND:197001"+((endDay < 10 )?"0":"")+endDay+"T"+endTime+"00";
        scheduleArr[scheduleArr.length] = "RRULE:FREQ=WEEKLY";
      }
      else if( visibleSchType == "monthly" )
      {
        var startSelect = document.getElementById( "monthly_start_day");
        var startDay = startSelect.options[ startSelect.selectedIndex ].value;

        var startTime = document.getElementById("monthly_start").value;
        startTime = startTime.replace(":", "");

        scheduleArr[scheduleArr.length] = "DTSTART:197001"+((startDay < 10 )?"0":"")+startDay+"T"+startTime+"00";

        var endSelect = document.getElementById( "monthly_end_day");
        var endDay = endSelect.options[ endSelect.selectedIndex ].value;

        var endTime = document.getElementById("monthly_end").value;
        endTime = endTime.replace(":", "");

        if( startDay > endDay || ( startDay == endDay && startTime >= endTime ) )
        {
          scheduleArr[scheduleArr.length] = "DTEND:197002"+((endDay < 10 )?"0":"")+endDay+"T"+endTime+"00";
        }
        else
        {
          scheduleArr[scheduleArr.length] = "DTEND:197001"+((endDay < 10 )?"0":"")+endDay+"T"+endTime+"00";
        }
        var monthsArr = getCheckboxesValues( visibleSchType );
        scheduleArr[scheduleArr.length] = "RRULE:FREQ=YEARLY;BYMONTH="+monthsArr.join(",");
      }
      else // yearly
      {
        var startSelect = document.getElementById( "yearly_start_month");
        var startMonth = startSelect.options[ startSelect.selectedIndex ].value;

        startSelect = document.getElementById( "yearly_start_day");
        var startDay = startSelect.options[ startSelect.selectedIndex ].value;

        var startTime = document.getElementById("yearly_start").value;
        startTime = startTime.replace(":", "");

        var startStr = ((startMonth < 10 )?"0":"")+startMonth+((startDay < 10 )?"0":"")+startDay;
        scheduleArr[scheduleArr.length] = "DTSTART:1970"+startStr+"T"+startTime+"00";

        var endSelect = document.getElementById( "yearly_end_month");
        var endMonth = endSelect.options[ endSelect.selectedIndex ].value;

        endSelect = document.getElementById( "yearly_end_day");
        var endDay = endSelect.options[ endSelect.selectedIndex ].value;

        var endTime = document.getElementById("yearly_end").value;
        endTime = endTime.replace(":", "");

        var endStr = ((endMonth < 10 )?"0":"")+endMonth+((endDay < 10 )?"0":"")+endDay;

        if( ( startMonth > endMonth ) || ( startMonth == endMonth && startDay > endDay )  || ( startMonth == endMonth && startDay == endDay && startTime >= endTime ) )
        {
          scheduleArr[scheduleArr.length] = "DTEND:1971"+endStr+"T"+endTime+"00";
        }
        else
        {
          scheduleArr[scheduleArr.length] = "DTEND:1970"+endStr+"T"+endTime+"00";
        }
        scheduleArr[scheduleArr.length] = "RRULE:FREQ=YEARLY";
      }

      obj.Schedule = { "ICalendar":scheduleArr.join("\n") };

      var soapParamObj = new SOAPClientParameters();
      soapParamObj.add("NewScheduledEvent", obj);

      var now = new Date();
      var timestamp = "?timestamp="+now.getTime();
  
      var url = "/vapix/services"+timestamp;
      var method = "aev:AddScheduledEvent";
      SOAPClient.invoke( wsdlUrl, url, eventNameSpaces, method, soapParamObj, true, onSaveSchedule );
    }

    function showErrorMsg( msg, focusOn )
    {
      alert( msg );
      if( focusOn )
      {
        focusOn.focus();
        focusOn.select();
      }
    }

    function onSaveSchedule( responseObj )
    {
    
      if( responseObj )
      {
        if( responseObj.name == "Error" )
        {
          var errorMsg = ( ( responseObj.description )?responseObj.description:(responseObj.fileName)?responseObj.fileName:responseObj.message );
          alert( errorMsg );
          
          document.getElementById( "btnOK" ).disabled = false;
          return;
        }
        if( responseObj.EventID )
        {
          newScheduleId = responseObj.EventID;
        }
      }//if response

      finishSave();
    }

    function finishSave()
    {
      document.getElementById( "btnOK" ).disabled = false;
      try
      {
        window.opener.addNewSchedule(newScheduleName, newScheduleId);
      }
      catch( e )
      {
      }
      try
      {
        window.opener.reloadSchedulesList();
      }
      catch( e )
      {
      }
      window.close();
    }

    // -->
  </script>
