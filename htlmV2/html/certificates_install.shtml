<!--#if expr="$type$ = cert" -->
  <!--#set var="helpURL" val="javascript:launch('/help/certificates_install_h.shtml')" -->
<!--#else -->
  <!--#set var="helpURL" val="javascript:launch('/help/certificates_install_ca_h.shtml')" -->
<!--#endif -->
<!--#set var="WizardFormAction" val="noAction" -->
<!--#include virtual="/incl/top_incl_popup.shtml" -->

<script src="/admin/base64.js" language="javascript" type="text/javascript"></script>
<script src="/incl/soapclient.js?ver=<!--#echo var="root_Properties_Firmware_Version" option="encoding:url" -->" language="javascript" type="text/javascript"></script>

<script language="JavaScript" type="text/javascript">
<!--
    //Global params
    var langObjCertInstall = new Language("certificates", "certificates_install");
    var dataCert;
    var dataKey;
    var certFileId;
    var keyFileId;
    var intervalId;
    var fileDataGetter = AxisConnectionFactory.createAjaxConnection();
    var keyDataGetter = AxisConnectionFactory.createAjaxConnection();
    var encodeDataKeyReady = true;
    var dataStep2Counter = 0;
    var dataStep3Counter = 0;
    //End Global params
    
    <!--#if expr="$type$ = cert" -->
    function toogleCertType()
    {
      if(document.instCertForm.certType[1].checked)
      {
        document.getElementById("privateKeyChild").style.display = '';
        toogleKeyType();
      }
      else
        document.getElementById("privateKeyChild").style.display = 'none';
    }
    
    function toogleKeyType()
    {
      if(document.uploadKeyForm.keyType[0].checked)
      {
        document.getElementById("separateKeyChild").style.display = '';
        document.getElementById("pkcsChild").style.display = 'none';
      }
      else
      {
        document.getElementById("separateKeyChild").style.display = 'none';
        document.getElementById("pkcsChild").style.display = '';
      }
    }
    <!--#endif -->
    
    function validateInput()
    {
      var certificateID = document.getElementById("certId");
      if(certificateID.value == "")
      {
        alert( langObjCertInstall.getText("certIdReqAlert") );
        certificateID.focus();
        return false;
      }
    <!--#if expr="$type$ = cert" -->
      if(document.instCertForm.certType[1].checked && document.uploadKeyForm.keyType[0].checked)
      {
        if(document.getElementById("filePrivateKey").value == "")
        {
          alert( langObjCertInstall.getText("noPriKeyFileAlert") );
          return false;
        }
      }
      else if(document.instCertForm.certType[1].checked && document.uploadKeyForm.keyType[1].checked && document.getElementById("pkcsPassword").value == "")
      {
        if( !confirm( langObjCertInstall.getText("passNotSetPkcsAlert") ) )
          return false;
      }
    <!--#endif -->
      if(document.getElementById("fileCert").value == "")
      {
        alert( langObjCertInstall.getText("noCertFileAlert") );
        return false;
      }
    
      return true;
    }
    
    function getNameSpaces( type )
    {
      var nsArray = new SOAPClientNS()
      if(type == "onvif")
      {
        nsArray.add("tt", "http://www.onvif.org/ver10/schema" );
        nsArray.add("tds", "http://www.onvif.org/ver10/device/wsdl" );
        nsArray.add("tev", "http://www.onvif.org/ver10/event/wsdl" );
        nsArray.add("ter", "http://www.onvif.org/ver10/error" );
        nsArray.add("wsnt", "http://docs.oasis-open.org/wsn/b-2" );
      }
      else if(type == "vapix")
      {
        nsArray.add("acertificates", "http://www.axis.com/vapix/ws/certificates" );
        nsArray.add("acert", "http://www.axis.com/vapix/ws/cert" );
      }
      return nsArray;
    }
    
    function saveDataStep1()
    {
      //Step1 - Validate all params and submit cert-file
      dataStep2Counter = 0;
      if(validateInput() )
      {
        document.getElementById("uploadCertForm").submit();
        intervalId = setInterval("saveDataStep2()",1000);
      }
    }
    
    function saveDataStep2()
    {
      //Step2 - Get hold of the cert-filename and if a key is to be used - upload it
      try
      {
        var frame = document.getElementById("iframe_filename");
        certFileId = frame.contentWindow.document.getElementById("fileID").innerHTML;
      }
      catch(err)
      {
        certFileId = "";
      }
    
      if(certFileId != "")
      {
        clearInterval( intervalId );
        dataStep3Counter = 0;
        
        <!--#if expr="$type$ = cert" -->
        if(document.instCertForm.certType[1].checked && document.uploadKeyForm.keyType[0].checked)
        {
          document.getElementById("uploadKeyForm").submit();
          intervalId = setInterval("saveDataKey()",1000);
        }
        else
          saveDataStep3();
        <!--#else -->
        saveDataStep3();
        <!--#endif -->
      }
      else
      {
        var certError;
        try
        {
          var frame = document.getElementById("iframe_filename");
          certError = frame.contentWindow.document.getElementById("errorMessage").innerHTML;
        }
        catch(err)
        {
          certError = "";
        }
        
        if(certError != "")
        {
          clearInterval( intervalId );
          alert(certError);
        }
        else
        {
          dataStep2Counter++;
          if(dataStep2Counter > 10)
          {
            clearInterval( intervalId );
            alert( langObjCertInstall.getText("timeOutCertAlert") );
          }
        }
      }
    }
    
    function saveDataKey()
    {
      //Save the private key and go on with step3
      try
      {
        var frame = document.getElementById("iframe_filename");
	      keyFileId = frame.contentWindow.document.getElementById("fileID").innerHTML;
	    }
	    catch(err)
	    {
	      keyFileId = "";
	    }
    
      if(keyFileId != "")
      {
        clearInterval( intervalId );
        saveDataStep3();
      }
      else
      {
        var keyError;
        try
        {
          var frame = document.getElementById("iframe_filename");
          keyError = frame.contentWindow.document.getElementById("errorMessage").innerHTML;
        }
        catch(err)
        {
          keyError = "";
        }
        
        if(keyError != "")
        {
          clearInterval( intervalId );
          alert(keyError);
        }
        else
        {
          dataStep3Counter++;
          if(dataStep3Counter > 10)
          {
            clearInterval( intervalId );
            alert( langObjCertInstall.getText("timeOutKeyAlert") );
          }
        }
      }
    }
    
    function saveDataStep3()
    {
      //Get the filecontent from cert and pass it to step4/encodeDataKey
      var now = new Date();
      var timestamp = now.getTime();
      
      var url = "/axis-cgi/admin/base64encode.cgi?fileID="+certFileId+"&timestamp="+timestamp;
      var onreadystatechange;
      
      if(keyFileId && keyFileId != "")
      {
        onreadystatechange = encodeDataKey;
      }
      else
        onreadystatechange = saveDataStep4;

      AxisConnectionFactory.sendAsync(["GET", url], "", onreadystatechange, fileDataGetter);
    }
    
    function encodeDataKey()
    {
      if( fileDataGetter.getReadyState() == 4 )
      {
        //Get the filecontent from key and pass it to step4
        var now = new Date();
        var timestamp = now.getTime();
        
        var url = "/axis-cgi/admin/base64encode.cgi?fileID="+keyFileId+"&timestamp="+timestamp;
        
        AxisConnectionFactory.sendAsync(["GET", url], "", saveDataStep4, keyDataGetter);
      }
    }
    
    function saveDataStep4()
    {
      if(keyFileId && keyFileId != "")
      {
        if( keyDataGetter.getReadyState() == 4)
          encodeDataKeyReady = true;
        else
          encodeDataKeyReady = false;
      }
      
      //Save the certificate by doing a WebService request
      if(encodeDataKeyReady)
      {
        if( fileDataGetter.getReadyState() == 4 )
        {
          if( fileDataGetter.getStatus() == 200 )
          {
            var contentNode = fileDataGetter.getResponseXml().selectSingleNode("//base64encdata");
            var tmpDataCert="";

            for (var i = 0; i < contentNode.childNodes.length; i++)
            {
              tmpDataCert += contentNode.childNodes[i].nodeValue;
            }

            dataCert = getDerData(tmpDataCert);
            
            if(keyFileId && keyFileId != "")
            {
              if( keyDataGetter.getStatus() == 200 )
              {
                var contentNode = keyDataGetter.getResponseXml().selectSingleNode("//base64encdata");
                var tmpDataKey="";

                for (var i = 0; i < contentNode.childNodes.length; i++)
                {
                  tmpDataKey += contentNode.childNodes[i].nodeValue;
                }
                
                dataKey = getDerData(tmpDataKey);
                
                if(dataKey.indexOf("ENCRYPTED") != -1 )
                {
                 alert( langObjCertInstall.getText("keyEncrpAlert") );
                 return;
                }
              }
              else
              {
                alert( langObjCertInstall.getText("noEncPriKeyAlert") );
                return;
              }
            }
            else if (dataCert.indexOf("ENCRYPTED") != -1)
            {
              alert( langObjCertInstall.getText("keyEncrpAlert") );
              return;
            }
            
            var nameSpaces; //Will be fetched depending on type - eg onvif or vapix
            var params = new SOAPClientParameters();

            var now = new Date();
            var timestamp = "?timestamp="+now.getTime();
            
          <!--#if expr="$type$ = ca" -->
            //CA Certificate
            nameSpaces = getNameSpaces( "onvif" );
            var wsdlUrl = "/wsdl/onvif/devicemgmt.wsdl";
            var url = "/vapix/services"+timestamp;
            
            var method = "tds:LoadCACertificates";

            var certificateObj = new Array();
            certificateObj["tt:Data"] = dataCert;

            var caParams = new Array();
            caParams["tt:CertificateID"] = document.getElementById("certId").value;
            caParams["tt:Certificate"] = certificateObj;
          
            params.add("CACertificate", caParams );
          <!--#else -->
            if(document.instCertForm.certType[0].checked)
            {
              //Regular Certificate
              nameSpaces = getNameSpaces( "onvif" );
              var wsdlUrl = "/wsdl/onvif/devicemgmt.wsdl";
              var url = "/vapix/services"+timestamp;
              
              var method = "tds:LoadCertificates";

              var certificateObj = new Array();
              certificateObj["tt:Data"] = dataCert;

              var nvtParams = new Array();
              nvtParams["tt:CertificateID"] = document.getElementById("certId").value;
              nvtParams["tt:Certificate"] = certificateObj;
            
              params.add("NVTCertificate", nvtParams );
            }
            else
            {
              if(document.uploadKeyForm.keyType[0].checked)
              {
                //Private Key
                nameSpaces = getNameSpaces( "onvif" );
                var wsdlUrl = "/wsdl/onvif/devicemgmt.wsdl";
                var url = "/vapix/services"+timestamp;
                
                var method = "tds:LoadCertificateWithPrivateKey";

                var keyObj = new Array();
                keyObj["tt:Data"] = dataKey;

                var certificateObj = new Array();
                certificateObj["tt:Data"] = dataCert;

                var certPkParams = new Array();
                certPkParams["tt:CertificateID"] = document.getElementById("certId").value;
                certPkParams["tt:Certificate"] = certificateObj;
                certPkParams["tt:PrivateKey"] = keyObj;
              
                params.add("CertificateWithPrivateKey", certPkParams );
              }
              else
              {
                //PKCS12
                nameSpaces = getNameSpaces( "vapix" );
                var wsdlUrl = "/wsdl/vapix/CertificateService.wsdl";
                var url = "/vapix/services"+timestamp;
                
                var method = "acertificates:LoadPkcs12";

                var pkcsParams = new Array();
                //The ID is optional
                if(document.getElementById("certId").value != "") {
                  pkcsParams["acert:Id"] = document.getElementById("certId").value;
                }
                pkcsParams["acert:Certificate"] = dataCert;
                pkcsParams["acert:Password"] = document.getElementById("pkcsPassword").value;
                
                params.add( "acertificates:Pkcs12", pkcsParams );
              }
            }
          <!--#endif -->
        
            SOAPClient.invoke( wsdlUrl, url, nameSpaces, method, params, true, whenFinished );
          }
          else
            alert( langObjCertInstall.getText("noEncCertAlert") );
        }
      }
    }
    
    function getDerData( data )
    {
      //Check if its PEM or DER
      var decoded = Base64.decode(data);
      var tmpDecoded = decoded;
      var pemTypesArr = new Array("-----BEGIN CERTIFICATE-----", "-----BEGIN TRUSTED CERTIFICATE-----", "-----BEGIN X509 CERTIFICATE-----", "-----BEGIN RSA PRIVATE KEY-----");
      
      if(decoded != null)
      {
        for(var i=0; i < pemTypesArr.length; i++)
        {
          if(tmpDecoded.indexOf(pemTypesArr[i]) != -1 )
          {
            //Its PEM - then its encoded twice - lets just remove the headers and return it
            tmpDecoded = tmpDecoded.replace(pemTypesArr[i], "");
            tmpDecoded = tmpDecoded.replace( pemTypesArr[i].replace("-----BEGIN", "-----END"), "");
          }
        }
        
        if(tmpDecoded != decoded)
          data = tmpDecoded;
      }
      
      return data;
    }
    
    function whenFinished( responseObj )
    {
      //Outputs the error message or if successful update certificates.shtml 
      if(responseObj)
      {
        if(responseObj.name == "Error")
        {

          var errorMsg = ( ( responseObj.description )?responseObj.description:(responseObj.fileName)?responseObj.fileName:responseObj.message );

          if(errorMsg.indexOf("Invalid CA certificate ID") >= 0)
          {
            alert( langObjCertInstall.getText("noInstFilesBadCACertIDAlert") );
          }
          else if(errorMsg.indexOf("Invalid format") >= 0)
          {
            alert( langObjCertInstall.getText("noInstFilesBadCACertFormatAlert") );
          }
          else
          {
            alert( langObjCertInstall.getText("noInstFilesBadReqAlert") );
          }
          return;
        }
      }
      
      window.opener.reloadPage("<!--#echo var="type" option="encoding:html" -->"); //<--- calls the reloadPage(cert_type) located in certificates.shtml
      window.close();
    }
  
    function globalLanguageVars()
    {
    <!--#if expr="$type$ != cert" -->
      var currTitle = document.title;
      var newTitle = currTitle.replace(langObjCertInstall.getText("pageTitle"), langObjCertInstall.getText("alternativePageTitle") );
      document.title = newTitle;
    <!--#endif -->
    }
//-->
</script>

</head>
<body class="bodyBg" topmargin="0" leftmargin="0" marginwidth="0" marginheight="0" bgcolor="white" onload="langObjCertInstall.init();">

<form name="instCertForm" id="instCertForm">
<div class="cornerBox">
    <div class="content">
  <table border="0" cellpadding="3" cellspacing="0" class="oddItem" width="346">
    <tr>
      <td colspan="2">
        <table border="0" cellpadding="0" cellspacing="0" width="100%">
          <tr>
            <td class="topTitle" align="left">
              <!--#if expr="$type$ = cert" -->
                <span id="instCertTxt"></span>
              <!--#else -->
                <span id="instCaTxt"></span>
              <!--#endif -->
            </td>
            <td class="topTitle" align="right">
              <a href="<!--#echo var="helpURL" option="encoding:url" -->">
                <img height="27" width="27" src="/pics/help.gif" border="0" alt="" id="hlpPic">
              </a>
            </td>
          </tr>
        </table>
      </td>
    </tr>
    <!--#if expr="$type$ = cert" -->
    <tr>
      <td class="oddItem" align="left" colspan="2"><input type="radio" checked name="certType" id="certType" onclick="javascript:toogleCertType();"><span id="certSignReqTxt"></span></td>
    </tr>
     <tr>
      <td class="oddItem" align="left" colspan="2"><input type="radio" name="certType" id="certType" onclick="javascript:toogleCertType();"><span id="certKeyTxt"></span></td>
    </tr>
</form>
<form name="uploadKeyForm" id="uploadKeyForm" action="/axis-cgi/admin/upload_file.cgi" enctype="multipart/form-data" method="POST" target="iframe_filename">
    <tr id="privateKeyChild" style="display: none;">
      <td colspan="2">
        <table width="100%" border="0" cellpadding="2" cellspacing="2">
          <tr>
            <td align="left" colspan="2">
              <img height="9" border="0" width="10" alt="" src="/pics/space.gif">
              <input type="radio" checked name="keyType" id="keyType" onclick="javascript:toogleKeyType();">&nbsp;<span id="sepKeyTxt"></span></td>
          </tr>
          <tr id="separateKeyChild" style="display: none;">
            <td>
              <img height="9" border="0" width="25" alt="" src="/pics/space.gif">
              Private key:
            </td>
            <td>
              <input type="file" maxlength="25" size="22" name="filePrivateKey" id="filePrivateKey">
            </td>
          </tr>
          <tr>
            <td align="left" colspan="2">
              <img height="9" border="0" width="10" alt="" src="/pics/space.gif">
              <input type="radio" name="keyType" id="keyType" onclick="javascript:toogleKeyType();">&nbsp;<span id="pkcs12Txt"></span></td>
          </tr>
          <tr id="pkcsChild" style="display: none;">
            <td>
              <img height="9" border="0" width="25" alt="" src="/pics/space.gif">
              Password: <input id="pkcsPassword" type="password">
            </td> 
          </tr>
        </table>
      </td>
    </tr>
    <!--#endif -->
</form>
<form name="uploadCertForm" id="uploadCertForm" action="/axis-cgi/admin/upload_file.cgi" enctype="multipart/form-data" method="POST" target="iframe_filename">
    <tr>
      <td class="evenItem"><span id="certIdTxt"></span></td>
      <td class="evenItem" align="left">
        <input type="text" maxlength="32" size="25" name="certId" id="certId">
      </td>
    </tr>
    <tr>
      <td class="oddItem"><span id="certTxt"></span></td>
      <td class="oddItem" align="left">
        <input type="file" maxlength="25" size="25" name="fileCert" id="fileCert">
      </td>
    </tr>
    <tr>
      <td class="topTitle" align="center" colspan="2">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr>
            <td class="button"><input type="button" width="75" value="" class="btnNormal" onClick="JavaScript:saveDataStep1()" id="installCert_okBtn"></td>
            <td class="button">&nbsp;</td>
            <td class="button"><input type="button" width="75" value="" class="btnNormal" onClick="window.close()" id="installCert_cancelBtn"></td>
          </tr>
        </table>
      </td>
    </tr>
  </table>
    </div>
    <div class="footerLeft"><div class="footerRight"></div></div>
  </div>

  <iframe src ="upload_file.shtml" width="200" height="200" frameborder="1" name="iframe_filename" id="iframe_filename" style="display:none;">
  <p></p>
  </iframe>
</form>
</body>
</html>
